{"ast":null,"code":"var _jsxFileName = \"/Users/adilimran/Downloads/Cardiac arrest prediction in New born Babies/cardiac-prediction-frontend/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid, Card, CardContent, Typography, Button, CircularProgress, Paper, useTheme, alpha, Divider, IconButton, Menu, MenuItem, ListItemIcon, ListItemText, Tooltip, Avatar, Stack, LinearProgress, Chip } from '@mui/material';\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell, AreaChart, Area } from 'recharts';\nimport { useNavigate } from 'react-router-dom';\nimport { People as PeopleIcon, Warning as WarningIcon, TrendingUp as TrendingUpIcon, AccessTime as AccessTimeIcon, LocalHospital as HospitalIcon, MoreVert as MoreVertIcon, Refresh as RefreshIcon, Timeline as TimelineIcon, Notifications as NotificationsIcon, ArrowForward as ArrowForwardIcon, Schedule as ScheduleIcon, PieChart as PieChartIcon, BarChart as BarChartIcon, ShowChart as ShowChartIcon, TimelineOutlined as TimelineOutlinedIcon, Assessment as AssessmentIcon, Error as ErrorIcon, CheckCircle as CheckCircleIcon, FiberManualRecord as FiberManualRecordIcon } from '@mui/icons-material';\nimport { format, subDays, parseISO } from 'date-fns';\n\n// Custom StatCard Component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StatCard = ({\n  title,\n  value,\n  icon,\n  color = 'primary',\n  trend,\n  subtitle,\n  loading = false\n}) => {\n  _s();\n  const theme = useTheme();\n  const trendColor = trend > 0 ? 'error' : 'success';\n  const trendText = trend > 0 ? `${trend}% Increase` : `${Math.abs(trend)}% Decrease`;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%',\n      borderRadius: 2,\n      boxShadow: '0 4px 20px 0 rgba(0,0,0,0.05)',\n      transition: 'all 0.3s ease',\n      '&:hover': {\n        transform: 'translateY(-4px)',\n        boxShadow: '0 8px 25px 0 rgba(0,0,0,0.1)'\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"textSecondary\",\n            sx: {\n              fontWeight: 500,\n              opacity: 0.8,\n              mb: 0.5\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n            height: 40,\n            display: \"flex\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"div\",\n              sx: {\n                fontWeight: 700,\n                background: `linear-gradient(45deg, ${theme.palette[color].main}, ${theme.palette[color].dark})`,\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent',\n                backgroundClip: 'text',\n                mb: 0.5\n              },\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), subtitle && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              sx: {\n                fontWeight: 500,\n                opacity: 0.8\n              },\n              children: subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            backgroundColor: `${theme.palette[color].light}30`,\n            borderRadius: '12px',\n            width: 48,\n            height: 48,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            color: theme.palette[color].main,\n            flexShrink: 0\n          },\n          children: /*#__PURE__*/React.cloneElement(icon, {\n            style: {\n              fontSize: 24\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), trend !== undefined && !loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 1.5,\n          display: 'flex',\n          alignItems: 'center',\n          color: trend > 0 ? 'error.main' : 'success.main'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TrendingUpIcon, {\n          sx: {\n            transform: trend > 0 ? 'rotate(0deg)' : 'rotate(180deg)',\n            mr: 0.5,\n            fontSize: '1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          sx: {\n            fontWeight: 600,\n            fontSize: '0.7rem',\n            textTransform: 'uppercase',\n            letterSpacing: '0.5px'\n          },\n          children: trendText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n// Risk Badge Component\n_s(StatCard, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = StatCard;\nconst RiskBadge = ({\n  risk,\n  size = 'medium'\n}) => {\n  _s2();\n  const theme = useTheme();\n  const getRiskStyles = () => {\n    if (!risk) return {\n      bgcolor: 'grey.300',\n      color: 'grey.800',\n      icon: null\n    };\n    const riskLower = risk.toLowerCase();\n    if (riskLower.includes('high')) {\n      return {\n        bgcolor: 'error.light',\n        color: 'error.contrastText',\n        icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {\n          fontSize: size === 'small' ? 'small' : 'medium'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this)\n      };\n    } else if (riskLower.includes('medium')) {\n      return {\n        bgcolor: 'warning.light',\n        color: 'warning.contrastText',\n        icon: /*#__PURE__*/_jsxDEV(WarningIcon, {\n          fontSize: size === 'small' ? 'small' : 'medium'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this)\n      };\n    } else if (riskLower.includes('low')) {\n      return {\n        bgcolor: 'success.light',\n        color: 'success.contrastText',\n        icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          fontSize: size === 'small' ? 'small' : 'medium'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this)\n      };\n    }\n    return {\n      bgcolor: 'grey.300',\n      color: 'grey.800',\n      icon: null\n    };\n  };\n  const styles = getRiskStyles();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      px: size === 'small' ? 1 : 1.5,\n      py: size === 'small' ? 0.25 : 0.5,\n      borderRadius: 4,\n      bgcolor: styles.bgcolor,\n      color: styles.color,\n      fontSize: size === 'small' ? '0.65rem' : '0.75rem',\n      fontWeight: 600,\n      textTransform: 'uppercase',\n      letterSpacing: '0.5px',\n      lineHeight: 1.2\n    },\n    children: [styles.icon && /*#__PURE__*/_jsxDEV(Box, {\n      mr: 0.5,\n      display: \"flex\",\n      alignItems: \"center\",\n      children: styles.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this), risk || 'N/A']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_s2(RiskBadge, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c2 = RiskBadge;\nconst API_URL = 'http://localhost:8000';\nconst Dashboard = () => {\n  _s3();\n  const theme = useTheme();\n  const navigate = useNavigate();\n\n  // State for dashboard data and UI\n  const [dashboardData, setDashboardData] = useState({\n    stats: {\n      totalPatients: {\n        value: '1,247',\n        change: 12.5\n      },\n      highRiskPatients: {\n        value: '87',\n        change: 8.2\n      },\n      avgResponseTime: {\n        value: '2.5',\n        change: -5.3\n      },\n      predictionAccuracy: {\n        value: '94.5%',\n        change: 2.1\n      }\n    },\n    recentPredictions: [],\n    riskTrends: [],\n    loading: true,\n    error: null,\n    timeRange: 'week',\n    refreshing: false,\n    anchorEl: null,\n    activeChart: 'line'\n  });\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n  const fetchDashboardData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Fetch dashboard stats from API\n      const response = await axios.get(`${API_URL}/dashboard/stats`);\n\n      // Mock data for the dashboard\n      const mockData = {\n        stats: {\n          totalPatients: 124,\n          highRisk: 8,\n          avgResponseTime: '2.5',\n          trend: 12.5,\n          // percentage\n          totalPredictions: 356,\n          accuracy: 94.2,\n          avgRiskScore: 0.34\n        },\n        recentAlerts: [{\n          id: 1,\n          patientId: 'P1001',\n          name: 'Emma Wilson',\n          riskLevel: 'High',\n          time: '10:23 AM',\n          age: '2 days',\n          weight: '3.2 kg',\n          avatar: '/static/images/avatar/1.jpg',\n          vitalSigns: {\n            heartRate: 185,\n            oxygen: 88,\n            bp: '85/45',\n            temperature: 37.2\n          }\n        }, {\n          id: 2,\n          patientId: 'P1002',\n          name: 'Noah Johnson',\n          riskLevel: 'Medium',\n          time: '09:45 AM',\n          age: '1 day',\n          weight: '2.9 kg',\n          avatar: '/static/images/avatar/2.jpg',\n          vitalSigns: {\n            heartRate: 165,\n            oxygen: 92,\n            bp: '90/50',\n            temperature: 36.8\n          }\n        }, {\n          id: 3,\n          patientId: 'P1003',\n          name: 'Ava Williams',\n          riskLevel: 'High',\n          time: '09:12 AM',\n          age: '3 days',\n          weight: '3.1 kg',\n          avatar: '/static/images/avatar/3.jpg',\n          vitalSigns: {\n            heartRate: 190,\n            oxygen: 85,\n            bp: '80/40',\n            temperature: 37.5\n          }\n        }],\n        riskTrend: [{\n          name: 'Jan',\n          high: 5,\n          medium: 12,\n          low: 35\n        }, {\n          name: 'Feb',\n          high: 7,\n          medium: 15,\n          low: 40\n        }, {\n          name: 'Mar',\n          high: 6,\n          medium: 14,\n          low: 38\n        }, {\n          name: 'Apr',\n          high: 8,\n          medium: 16,\n          low: 42\n        }, {\n          name: 'May',\n          high: 10,\n          medium: 18,\n          low: 45\n        }, {\n          name: 'Jun',\n          high: 12,\n          medium: 20,\n          low: 48\n        }],\n        riskDistribution: [{\n          name: 'High Risk',\n          value: 8,\n          color: '#f44336'\n        }, {\n          name: 'Medium Risk',\n          value: 24,\n          color: '#ff9800'\n        }, {\n          name: 'Low Risk',\n          value: 92,\n          color: '#4caf50'\n        }],\n        weeklyStats: {\n          predictions: 42,\n          alerts: 8,\n          avgRiskScore: 0.34\n        },\n        recentPredictions: [{\n          id: 1,\n          patientId: 'P1004',\n          name: 'Liam Brown',\n          riskScore: 0.82,\n          status: 'High',\n          timestamp: '2023-06-15T10:30:00'\n        }, {\n          id: 2,\n          patientId: 'P1005',\n          name: 'Sophia Davis',\n          riskScore: 0.65,\n          status: 'Medium',\n          timestamp: '2023-06-15T09:45:00'\n        }, {\n          id: 3,\n          patientId: 'P1006',\n          name: 'Mia Miller',\n          riskScore: 0.45,\n          status: 'Medium',\n          timestamp: '2023-06-14T16:20:00'\n        }]\n      };\n\n      // Format risk distribution for chart\n      const riskDistributionData = [{\n        name: 'Low',\n        count: mockData.riskDistribution[2].value\n      }, {\n        name: 'Moderate',\n        count: mockData.riskDistribution[1].value\n      }, {\n        name: 'High',\n        count: mockData.riskDistribution[0].value\n      }, {\n        name: 'Critical',\n        count: 0\n      }];\n\n      // Format recent predictions\n      const formattedPredictions = mockData.recentPredictions.map(pred => ({\n        id: pred.patientId,\n        timestamp: pred.timestamp,\n        riskScore: pred.riskScore,\n        alertTriggered: pred.status === 'High',\n        risk_score: pred.riskScore,\n        alert_triggered: pred.status === 'High'\n      }));\n      setDashboardData({\n        recentPredictions: formattedPredictions,\n        riskDistribution: riskDistributionData,\n        riskTrend: response.data.risk_trend,\n        systemStatus: response.data.system_status\n      });\n      setLoading(false);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Failed to fetch dashboard data: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message));\n      console.error('Error fetching dashboard data:', err);\n      setLoading(false);\n    }\n  };\n  const getRiskLevelColor = score => {\n    if (score >= 0.8) return '#d32f2f'; // Critical - Red\n    if (score >= 0.6) return '#f57c00'; // High - Orange\n    if (score >= 0.4) return '#fbc02d'; // Moderate - Yellow\n    return '#388e3c'; // Low - Green\n  };\n  const getRiskLevelText = score => {\n    if (score >= 0.8) return 'CRITICAL';\n    if (score >= 0.6) return 'HIGH';\n    if (score >= 0.4) return 'MODERATE';\n    return 'LOW';\n  };\n  const handleViewHistory = patientId => {\n    navigate(`/history/${patientId}`);\n  };\n  const handleNewPrediction = () => {\n    navigate('/predict');\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  if (loading && !dashboardData.recentPredictions.length) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '50vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Cardiac Risk Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleNewPrediction,\n        children: \"New Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          elevation: 3,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"System Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Model Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: dashboardData.systemStatus.model_status || \"Online\",\n                  color: \"success\",\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Alert System:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: dashboardData.systemStatus.alert_system || \"Active\",\n                  color: \"success\",\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Last Update:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: dashboardData.systemStatus.last_update ? formatDate(dashboardData.systemStatus.last_update) : \"Today, 10:30 AM\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Total Predictions:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: dashboardData.systemStatus.total_predictions || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Alerts Triggered:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [dashboardData.systemStatus.alerts_triggered || 0, \"(\", dashboardData.systemStatus.alert_percentage ? dashboardData.systemStatus.alert_percentage.toFixed(1) + '%' : '0%', \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Risk Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 200,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: dashboardData.riskDistribution,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"count\",\n                name: \"Patients\",\n                fill: \"#1976d2\",\n                barSize: 40\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Average Risk Trend (Last 7 Days)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: dashboardData.riskTrend,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                domain: [0, 1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                formatter: value => [`${(value * 100).toFixed(1)}%`, 'Average Risk']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"avgRisk\",\n                name: \"Average Risk Score\",\n                stroke: \"#1976d2\",\n                activeDot: {\n                  r: 8\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Recent Predictions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this), dashboardData.recentPredictions.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              py: 2,\n              textAlign: 'center'\n            },\n            children: \"No predictions available yet. Make a new prediction to see results here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(List, {\n            children: dashboardData.recentPredictions.map((prediction, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [index > 0 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  onClick: () => handleViewHistory(prediction.id),\n                  children: \"View History\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 25\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      sx: {\n                        mr: 2\n                      },\n                      children: [\"Patient \", prediction.id]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      label: getRiskLevelText(prediction.risk_score),\n                      size: \"small\",\n                      sx: {\n                        backgroundColor: getRiskLevelColor(prediction.risk_score),\n                        color: 'white'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 29\n                    }, this), prediction.alert_triggered && /*#__PURE__*/_jsxDEV(Chip, {\n                      label: \"Alert Sent\",\n                      size: \"small\",\n                      color: \"error\",\n                      sx: {\n                        ml: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 27\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [formatDate(prediction.timestamp), \" | Risk Score: \", (prediction.risk_score * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 21\n              }, this)]\n            }, `${prediction.id}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 5\n  }, this);\n};\n_s3(Dashboard, \"doJ82qXYeVoYw1TDMzTdD6ihzJk=\", false, function () {\n  return [useTheme, useNavigate];\n});\n_c3 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StatCard\");\n$RefreshReg$(_c2, \"RiskBadge\");\n$RefreshReg$(_c3, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Grid","Card","CardContent","Typography","Button","CircularProgress","Paper","useTheme","alpha","Divider","IconButton","Menu","MenuItem","ListItemIcon","ListItemText","Tooltip","Avatar","Stack","LinearProgress","Chip","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","RechartsTooltip","Legend","ResponsiveContainer","PieChart","Pie","Cell","AreaChart","Area","useNavigate","People","PeopleIcon","Warning","WarningIcon","TrendingUp","TrendingUpIcon","AccessTime","AccessTimeIcon","LocalHospital","HospitalIcon","MoreVert","MoreVertIcon","Refresh","RefreshIcon","Timeline","TimelineIcon","Notifications","NotificationsIcon","ArrowForward","ArrowForwardIcon","Schedule","ScheduleIcon","PieChartIcon","BarChartIcon","ShowChart","ShowChartIcon","TimelineOutlined","TimelineOutlinedIcon","Assessment","AssessmentIcon","Error","ErrorIcon","CheckCircle","CheckCircleIcon","FiberManualRecord","FiberManualRecordIcon","format","subDays","parseISO","jsxDEV","_jsxDEV","Fragment","_Fragment","StatCard","title","value","icon","color","trend","subtitle","loading","_s","theme","trendColor","trendText","Math","abs","sx","height","borderRadius","boxShadow","transition","transform","children","display","justifyContent","alignItems","variant","fontWeight","opacity","mb","fileName","_jsxFileName","lineNumber","columnNumber","size","component","background","palette","main","dark","WebkitBackgroundClip","WebkitTextFillColor","backgroundClip","backgroundColor","light","width","flexShrink","cloneElement","style","fontSize","undefined","mt","mr","textTransform","letterSpacing","_c","RiskBadge","risk","_s2","getRiskStyles","bgcolor","riskLower","toLowerCase","includes","styles","px","py","lineHeight","_c2","API_URL","Dashboard","_s3","navigate","dashboardData","setDashboardData","stats","totalPatients","change","highRiskPatients","avgResponseTime","predictionAccuracy","recentPredictions","riskTrends","error","timeRange","refreshing","anchorEl","activeChart","fetchDashboardData","setLoading","setError","response","axios","get","mockData","highRisk","totalPredictions","accuracy","avgRiskScore","recentAlerts","id","patientId","name","riskLevel","time","age","weight","avatar","vitalSigns","heartRate","oxygen","bp","temperature","riskTrend","high","medium","low","riskDistribution","weeklyStats","predictions","alerts","riskScore","status","timestamp","riskDistributionData","count","formattedPredictions","map","pred","alertTriggered","risk_score","alert_triggered","data","risk_trend","systemStatus","system_status","err","_err$response","_err$response$data","detail","message","console","getRiskLevelColor","score","getRiskLevelText","handleViewHistory","handleNewPrediction","formatDate","dateString","date","Date","toLocaleString","length","onClick","Alert","severity","my","container","spacing","item","xs","md","elevation","gutterBottom","flexDirection","gap","label","model_status","alert_system","last_update","total_predictions","alerts_triggered","alert_percentage","toFixed","p","strokeDasharray","dataKey","fill","barSize","domain","formatter","type","stroke","activeDot","r","textAlign","List","prediction","index","ListItem","secondaryAction","primary","ml","secondary","_c3","$RefreshReg$"],"sources":["/Users/adilimran/Downloads/Cardiac arrest prediction in New born Babies/cardiac-prediction-frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Grid, \n  Card, \n  CardContent, \n  Typography, \n  Button, \n  CircularProgress,\n  Paper,\n  useTheme,\n  alpha,\n  Divider,\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  Avatar,\n  Stack,\n  LinearProgress,\n  Chip\n} from '@mui/material';\nimport { \n  LineChart, \n  Line, \n  BarChart,\n  Bar,\n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip as RechartsTooltip, \n  Legend, \n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  AreaChart,\n  Area\n} from 'recharts';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  People as PeopleIcon, \n  Warning as WarningIcon, \n  TrendingUp as TrendingUpIcon, \n  AccessTime as AccessTimeIcon,\n  LocalHospital as HospitalIcon,\n  MoreVert as MoreVertIcon,\n  Refresh as RefreshIcon,\n  Timeline as TimelineIcon,\n  Notifications as NotificationsIcon,\n  ArrowForward as ArrowForwardIcon,\n  Schedule as ScheduleIcon,\n  PieChart as PieChartIcon,\n  BarChart as BarChartIcon,\n  ShowChart as ShowChartIcon,\n  TimelineOutlined as TimelineOutlinedIcon,\n  Assessment as AssessmentIcon,\n  Error as ErrorIcon,\n  CheckCircle as CheckCircleIcon,\n  FiberManualRecord as FiberManualRecordIcon\n} from '@mui/icons-material';\nimport { format, subDays, parseISO } from 'date-fns';\n\n// Custom StatCard Component\nconst StatCard = ({ \n  title, \n  value, \n  icon, \n  color = 'primary', \n  trend, \n  subtitle,\n  loading = false\n}) => {\n  const theme = useTheme();\n  const trendColor = trend > 0 ? 'error' : 'success';\n  const trendText = trend > 0 ? `${trend}% Increase` : `${Math.abs(trend)}% Decrease`;\n\n  return (\n    <Card \n      sx={{ \n        height: '100%',\n        borderRadius: 2,\n        boxShadow: '0 4px 20px 0 rgba(0,0,0,0.05)',\n        transition: 'all 0.3s ease',\n        '&:hover': {\n          transform: 'translateY(-4px)',\n          boxShadow: '0 8px 25px 0 rgba(0,0,0,0.1)',\n        },\n      }}\n    >\n      <CardContent>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-start\">\n          <Box>\n            <Typography \n              variant=\"subtitle2\" \n              color=\"textSecondary\" \n              sx={{ \n                fontWeight: 500,\n                opacity: 0.8,\n                mb: 0.5\n              }}\n            >\n              {title}\n            </Typography>\n            {loading ? (\n              <Box height={40} display=\"flex\" alignItems=\"center\">\n                <CircularProgress size={24} />\n              </Box>\n            ) : (\n              <>\n                <Typography \n                  variant=\"h4\" \n                  component=\"div\" \n                  sx={{ \n                    fontWeight: 700,\n                    background: `linear-gradient(45deg, ${theme.palette[color].main}, ${theme.palette[color].dark})`,\n                    WebkitBackgroundClip: 'text',\n                    WebkitTextFillColor: 'transparent',\n                    backgroundClip: 'text',\n                    mb: 0.5\n                  }}\n                >\n                  {value}\n                </Typography>\n                {subtitle && (\n                  <Typography \n                    variant=\"body2\" \n                    color=\"textSecondary\"\n                    sx={{ \n                      fontWeight: 500,\n                      opacity: 0.8\n                    }}\n                  >\n                    {subtitle}\n                  </Typography>\n                )}\n              </>\n            )}\n          </Box>\n          <Box\n            sx={{\n              backgroundColor: `${theme.palette[color].light}30`,\n              borderRadius: '12px',\n              width: 48,\n              height: 48,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              color: theme.palette[color].main,\n              flexShrink: 0,\n            }}\n          >\n            {React.cloneElement(icon, { \n              style: { fontSize: 24 } \n            })}\n          </Box>\n        </Box>\n        {trend !== undefined && !loading && (\n          <Box \n            sx={{ \n              mt: 1.5,\n              display: 'flex',\n              alignItems: 'center',\n              color: trend > 0 ? 'error.main' : 'success.main',\n            }}\n          >\n            <TrendingUpIcon \n              sx={{ \n                transform: trend > 0 ? 'rotate(0deg)' : 'rotate(180deg)',\n                mr: 0.5,\n                fontSize: '1rem'\n              }} \n            />\n            <Typography \n              variant=\"caption\" \n              sx={{ \n                fontWeight: 600,\n                fontSize: '0.7rem',\n                textTransform: 'uppercase',\n                letterSpacing: '0.5px'\n              }}\n            >\n              {trendText}\n            </Typography>\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n// Risk Badge Component\nconst RiskBadge = ({ risk, size = 'medium' }) => {\n  const theme = useTheme();\n  \n  const getRiskStyles = () => {\n    if (!risk) return { bgcolor: 'grey.300', color: 'grey.800', icon: null };\n    \n    const riskLower = risk.toLowerCase();\n    if (riskLower.includes('high')) {\n      return {\n        bgcolor: 'error.light',\n        color: 'error.contrastText',\n        icon: <ErrorIcon fontSize={size === 'small' ? 'small' : 'medium'} />\n      };\n    } else if (riskLower.includes('medium')) {\n      return {\n        bgcolor: 'warning.light',\n        color: 'warning.contrastText',\n        icon: <WarningIcon fontSize={size === 'small' ? 'small' : 'medium'} />\n      };\n    } else if (riskLower.includes('low')) {\n      return {\n        bgcolor: 'success.light',\n        color: 'success.contrastText',\n        icon: <CheckCircleIcon fontSize={size === 'small' ? 'small' : 'medium'} />\n      };\n    }\n    return {\n      bgcolor: 'grey.300',\n      color: 'grey.800',\n      icon: null\n    };\n  };\n  \n  const styles = getRiskStyles();\n  \n  return (\n    <Box \n      sx={{\n        display: 'inline-flex',\n        alignItems: 'center',\n        px: size === 'small' ? 1 : 1.5,\n        py: size === 'small' ? 0.25 : 0.5,\n        borderRadius: 4,\n        bgcolor: styles.bgcolor,\n        color: styles.color,\n        fontSize: size === 'small' ? '0.65rem' : '0.75rem',\n        fontWeight: 600,\n        textTransform: 'uppercase',\n        letterSpacing: '0.5px',\n        lineHeight: 1.2,\n      }}\n    >\n      {styles.icon && (\n        <Box mr={0.5} display=\"flex\" alignItems=\"center\">\n          {styles.icon}\n        </Box>\n      )}\n      {risk || 'N/A'}\n    </Box>\n  );\n};\n\nconst API_URL = 'http://localhost:8000';\n\nconst Dashboard = () => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  \n  // State for dashboard data and UI\n  const [dashboardData, setDashboardData] = useState({\n    stats: {\n      totalPatients: { value: '1,247', change: 12.5 },\n      highRiskPatients: { value: '87', change: 8.2 },\n      avgResponseTime: { value: '2.5', change: -5.3 },\n      predictionAccuracy: { value: '94.5%', change: 2.1 }\n    },\n    recentPredictions: [],\n    riskTrends: [],\n    loading: true,\n    error: null,\n    timeRange: 'week',\n    refreshing: false,\n    anchorEl: null,\n    activeChart: 'line'\n  });\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n\n  const fetchDashboardData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Fetch dashboard stats from API\n      const response = await axios.get(`${API_URL}/dashboard/stats`);\n      \n      // Mock data for the dashboard\n      const mockData = {\n        stats: {\n          totalPatients: 124,\n          highRisk: 8,\n          avgResponseTime: '2.5',\n          trend: 12.5, // percentage\n          totalPredictions: 356,\n          accuracy: 94.2,\n          avgRiskScore: 0.34\n        },\n        recentAlerts: [\n          { \n            id: 1, \n            patientId: 'P1001', \n            name: 'Emma Wilson', \n            riskLevel: 'High', \n            time: '10:23 AM',\n            age: '2 days',\n            weight: '3.2 kg',\n            avatar: '/static/images/avatar/1.jpg',\n            vitalSigns: {\n              heartRate: 185,\n              oxygen: 88,\n              bp: '85/45',\n              temperature: 37.2\n            }\n          },\n          { \n            id: 2, \n            patientId: 'P1002', \n            name: 'Noah Johnson', \n            riskLevel: 'Medium', \n            time: '09:45 AM',\n            age: '1 day',\n            weight: '2.9 kg',\n            avatar: '/static/images/avatar/2.jpg',\n            vitalSigns: {\n              heartRate: 165,\n              oxygen: 92,\n              bp: '90/50',\n              temperature: 36.8\n            }\n          },\n          { \n            id: 3, \n            patientId: 'P1003', \n            name: 'Ava Williams', \n            riskLevel: 'High', \n            time: '09:12 AM',\n            age: '3 days',\n            weight: '3.1 kg',\n            avatar: '/static/images/avatar/3.jpg',\n            vitalSigns: {\n              heartRate: 190,\n              oxygen: 85,\n              bp: '80/40',\n              temperature: 37.5\n            }\n          },\n        ],\n        riskTrend: [\n          { name: 'Jan', high: 5, medium: 12, low: 35 },\n          { name: 'Feb', high: 7, medium: 15, low: 40 },\n          { name: 'Mar', high: 6, medium: 14, low: 38 },\n          { name: 'Apr', high: 8, medium: 16, low: 42 },\n          { name: 'May', high: 10, medium: 18, low: 45 },\n          { name: 'Jun', high: 12, medium: 20, low: 48 },\n        ],\n        riskDistribution: [\n          { name: 'High Risk', value: 8, color: '#f44336' },\n          { name: 'Medium Risk', value: 24, color: '#ff9800' },\n          { name: 'Low Risk', value: 92, color: '#4caf50' },\n        ],\n        weeklyStats: {\n          predictions: 42,\n          alerts: 8,\n          avgRiskScore: 0.34,\n        },\n        recentPredictions: [\n          { id: 1, patientId: 'P1004', name: 'Liam Brown', riskScore: 0.82, status: 'High', timestamp: '2023-06-15T10:30:00' },\n          { id: 2, patientId: 'P1005', name: 'Sophia Davis', riskScore: 0.65, status: 'Medium', timestamp: '2023-06-15T09:45:00' },\n          { id: 3, patientId: 'P1006', name: 'Mia Miller', riskScore: 0.45, status: 'Medium', timestamp: '2023-06-14T16:20:00' },\n        ]\n      };\n      \n      // Format risk distribution for chart\n      const riskDistributionData = [\n        { name: 'Low', count: mockData.riskDistribution[2].value },\n        { name: 'Moderate', count: mockData.riskDistribution[1].value },\n        { name: 'High', count: mockData.riskDistribution[0].value },\n        { name: 'Critical', count: 0 }\n      ];\n      \n      // Format recent predictions\n      const formattedPredictions = mockData.recentPredictions.map(pred => ({\n        id: pred.patientId,\n        timestamp: pred.timestamp,\n        riskScore: pred.riskScore,\n        alertTriggered: pred.status === 'High',\n        risk_score: pred.riskScore,\n        alert_triggered: pred.status === 'High'\n      }));\n      \n      setDashboardData({\n        recentPredictions: formattedPredictions,\n        riskDistribution: riskDistributionData,\n        riskTrend: response.data.risk_trend,\n        systemStatus: response.data.system_status\n      });\n      \n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch dashboard data: ' + (err.response?.data?.detail || err.message));\n      console.error('Error fetching dashboard data:', err);\n      setLoading(false);\n    }\n  };\n\n  const getRiskLevelColor = (score) => {\n    if (score >= 0.8) return '#d32f2f'; // Critical - Red\n    if (score >= 0.6) return '#f57c00'; // High - Orange\n    if (score >= 0.4) return '#fbc02d'; // Moderate - Yellow\n    return '#388e3c'; // Low - Green\n  };\n\n  const getRiskLevelText = (score) => {\n    if (score >= 0.8) return 'CRITICAL';\n    if (score >= 0.6) return 'HIGH';\n    if (score >= 0.4) return 'MODERATE';\n    return 'LOW';\n  };\n\n  const handleViewHistory = (patientId) => {\n    navigate(`/history/${patientId}`);\n  };\n\n  const handleNewPrediction = () => {\n    navigate('/predict');\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  if (loading && !dashboardData.recentPredictions.length) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ py: 4 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Cardiac Risk Dashboard\n        </Typography>\n        <Button \n          variant=\"contained\" \n          color=\"primary\"\n          onClick={handleNewPrediction}\n        >\n          New Prediction\n        </Button>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      {loading && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 2 }}>\n          <CircularProgress size={24} />\n        </Box>\n      )}\n\n      <Grid container spacing={4}>\n        {/* System Status Card */}\n        <Grid item xs={12} md={4}>\n          <Card elevation={3}>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                System Status\n              </Typography>\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Model Status:</Typography>\n                  <Chip \n                    label={dashboardData.systemStatus.model_status || \"Online\"} \n                    color=\"success\" \n                    size=\"small\" \n                  />\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Alert System:</Typography>\n                  <Chip \n                    label={dashboardData.systemStatus.alert_system || \"Active\"} \n                    color=\"success\" \n                    size=\"small\" \n                  />\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Last Update:</Typography>\n                  <Typography variant=\"body2\">\n                    {dashboardData.systemStatus.last_update \n                      ? formatDate(dashboardData.systemStatus.last_update) \n                      : \"Today, 10:30 AM\"}\n                  </Typography>\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Total Predictions:</Typography>\n                  <Typography variant=\"body2\">\n                    {dashboardData.systemStatus.total_predictions || 0}\n                  </Typography>\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Alerts Triggered:</Typography>\n                  <Typography variant=\"body2\">\n                    {dashboardData.systemStatus.alerts_triggered || 0} \n                    ({dashboardData.systemStatus.alert_percentage \n                      ? dashboardData.systemStatus.alert_percentage.toFixed(1) + '%' \n                      : '0%'})\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Risk Distribution Chart */}\n        <Grid item xs={12} md={8}>\n          <Paper elevation={3} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Risk Distribution\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <BarChart data={dashboardData.riskDistribution}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Bar \n                  dataKey=\"count\" \n                  name=\"Patients\" \n                  fill=\"#1976d2\"\n                  barSize={40}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n\n        {/* Risk Trend Chart */}\n        <Grid item xs={12}>\n          <Paper elevation={3} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Average Risk Trend (Last 7 Days)\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <LineChart data={dashboardData.riskTrend}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis domain={[0, 1]} />\n                <Tooltip formatter={(value) => [`${(value * 100).toFixed(1)}%`, 'Average Risk']} />\n                <Legend />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"avgRisk\" \n                  name=\"Average Risk Score\" \n                  stroke=\"#1976d2\" \n                  activeDot={{ r: 8 }} \n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n\n        {/* Recent Predictions */}\n        <Grid item xs={12}>\n          <Paper elevation={3} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Recent Predictions\n            </Typography>\n            {dashboardData.recentPredictions.length === 0 ? (\n              <Typography variant=\"body1\" sx={{ py: 2, textAlign: 'center' }}>\n                No predictions available yet. Make a new prediction to see results here.\n              </Typography>\n            ) : (\n              <List>\n                {dashboardData.recentPredictions.map((prediction, index) => (\n                  <React.Fragment key={`${prediction.id}-${index}`}>\n                    {index > 0 && <Divider />}\n                    <ListItem\n                      secondaryAction={\n                        <Button \n                          variant=\"outlined\" \n                          size=\"small\"\n                          onClick={() => handleViewHistory(prediction.id)}\n                        >\n                          View History\n                        </Button>\n                      }\n                    >\n                      <ListItemText\n                        primary={\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <Typography variant=\"body1\" sx={{ mr: 2 }}>\n                              Patient {prediction.id}\n                            </Typography>\n                            <Chip \n                              label={getRiskLevelText(prediction.risk_score)} \n                              size=\"small\"\n                              sx={{ \n                                backgroundColor: getRiskLevelColor(prediction.risk_score),\n                                color: 'white'\n                              }}\n                            />\n                            {prediction.alert_triggered && (\n                              <Chip \n                                label=\"Alert Sent\" \n                                size=\"small\"\n                                color=\"error\"\n                                sx={{ ml: 1 }}\n                              />\n                            )}\n                          </Box>\n                        }\n                        secondary={\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {formatDate(prediction.timestamp)} | Risk Score: {(prediction.risk_score * 100).toFixed(1)}%\n                          </Typography>\n                        }\n                      />\n                    </ListItem>\n                  </React.Fragment>\n                ))}\n              </List>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}