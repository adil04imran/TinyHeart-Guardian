{"ast":null,"code":"var _jsxFileName = \"/Users/adilimran/Downloads/Cardiac arrest prediction in New born Babies/cardiac-prediction-frontend/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid, Card, CardContent, Typography, Button, CircularProgress, Paper, useTheme, alpha, Divider, IconButton, Menu, MenuItem, ListItemIcon, ListItemText, Tooltip, Avatar, Stack, LinearProgress, Chip } from '@mui/material';\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell, AreaChart, Area } from 'recharts';\nimport { useNavigate } from 'react-router-dom';\nimport { People as PeopleIcon, Warning as WarningIcon, TrendingUp as TrendingUpIcon, AccessTime as AccessTimeIcon, LocalHospital as HospitalIcon, MoreVert as MoreVertIcon, Refresh as RefreshIcon, Timeline as TimelineIcon, Notifications as NotificationsIcon, ArrowForward as ArrowForwardIcon, Schedule as ScheduleIcon, PieChart as PieChartIcon, BarChart as BarChartIcon, ShowChart as ShowChartIcon, TimelineOutlined as TimelineOutlinedIcon, Assessment as AssessmentIcon, Error as ErrorIcon, CheckCircle as CheckCircleIcon, FiberManualRecord as FiberManualRecordIcon } from '@mui/icons-material';\nimport { format, subDays, parseISO } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8000';\nconst Dashboard = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [dashboardData, setDashboardData] = useState({\n    recentPredictions: [],\n    riskDistribution: [],\n    riskTrend: [],\n    systemStatus: {}\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n  const fetchDashboardData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Fetch dashboard stats from API\n      const response = await axios.get(`${API_URL}/dashboard/stats`);\n\n      // Mock data for the dashboard\n      const mockData = {\n        stats: {\n          totalPatients: 124,\n          highRisk: 8,\n          avgResponseTime: '2.5',\n          trend: 12.5,\n          // percentage\n          totalPredictions: 356,\n          accuracy: 94.2,\n          avgRiskScore: 0.34\n        },\n        recentAlerts: [{\n          id: 1,\n          patientId: 'P1001',\n          name: 'Emma Wilson',\n          riskLevel: 'High',\n          time: '10:23 AM',\n          age: '2 days',\n          weight: '3.2 kg',\n          avatar: '/static/images/avatar/1.jpg',\n          vitalSigns: {\n            heartRate: 185,\n            oxygen: 88,\n            bp: '85/45',\n            temperature: 37.2\n          }\n        }, {\n          id: 2,\n          patientId: 'P1002',\n          name: 'Noah Johnson',\n          riskLevel: 'Medium',\n          time: '09:45 AM',\n          age: '1 day',\n          weight: '2.9 kg',\n          avatar: '/static/images/avatar/2.jpg',\n          vitalSigns: {\n            heartRate: 165,\n            oxygen: 92,\n            bp: '90/50',\n            temperature: 36.8\n          }\n        }, {\n          id: 3,\n          patientId: 'P1003',\n          name: 'Ava Williams',\n          riskLevel: 'High',\n          time: '09:12 AM',\n          age: '3 days',\n          weight: '3.1 kg',\n          avatar: '/static/images/avatar/3.jpg',\n          vitalSigns: {\n            heartRate: 190,\n            oxygen: 85,\n            bp: '80/40',\n            temperature: 37.5\n          }\n        }],\n        riskTrend: [{\n          name: 'Jan',\n          high: 5,\n          medium: 12,\n          low: 35\n        }, {\n          name: 'Feb',\n          high: 7,\n          medium: 15,\n          low: 40\n        }, {\n          name: 'Mar',\n          high: 6,\n          medium: 14,\n          low: 38\n        }, {\n          name: 'Apr',\n          high: 8,\n          medium: 16,\n          low: 42\n        }, {\n          name: 'May',\n          high: 10,\n          medium: 18,\n          low: 45\n        }, {\n          name: 'Jun',\n          high: 12,\n          medium: 20,\n          low: 48\n        }],\n        riskDistribution: [{\n          name: 'High Risk',\n          value: 8,\n          color: '#f44336'\n        }, {\n          name: 'Medium Risk',\n          value: 24,\n          color: '#ff9800'\n        }, {\n          name: 'Low Risk',\n          value: 92,\n          color: '#4caf50'\n        }],\n        weeklyStats: {\n          predictions: 42,\n          alerts: 8,\n          avgRiskScore: 0.34\n        },\n        recentPredictions: [{\n          id: 1,\n          patientId: 'P1004',\n          name: 'Liam Brown',\n          riskScore: 0.82,\n          status: 'High',\n          timestamp: '2023-06-15T10:30:00'\n        }, {\n          id: 2,\n          patientId: 'P1005',\n          name: 'Sophia Davis',\n          riskScore: 0.65,\n          status: 'Medium',\n          timestamp: '2023-06-15T09:45:00'\n        }, {\n          id: 3,\n          patientId: 'P1006',\n          name: 'Mia Miller',\n          riskScore: 0.45,\n          status: 'Medium',\n          timestamp: '2023-06-14T16:20:00'\n        }]\n      };\n\n      // Format risk distribution for chart\n      const riskDistributionData = [{\n        name: 'Low',\n        count: mockData.riskDistribution[2].value\n      }, {\n        name: 'Moderate',\n        count: mockData.riskDistribution[1].value\n      }, {\n        name: 'High',\n        count: mockData.riskDistribution[0].value\n      }, {\n        name: 'Critical',\n        count: 0\n      }];\n\n      // Format recent predictions\n      const formattedPredictions = mockData.recentPredictions.map(pred => ({\n        id: pred.patientId,\n        timestamp: pred.timestamp,\n        riskScore: pred.riskScore,\n        alertTriggered: pred.status === 'High',\n        risk_score: pred.riskScore,\n        alert_triggered: pred.status === 'High'\n      }));\n      setDashboardData({\n        recentPredictions: formattedPredictions,\n        riskDistribution: riskDistributionData,\n        riskTrend: response.data.risk_trend,\n        systemStatus: response.data.system_status\n      });\n      setLoading(false);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Failed to fetch dashboard data: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message));\n      console.error('Error fetching dashboard data:', err);\n      setLoading(false);\n    }\n  };\n  const getRiskLevelColor = score => {\n    if (score >= 0.8) return '#d32f2f'; // Critical - Red\n    if (score >= 0.6) return '#f57c00'; // High - Orange\n    if (score >= 0.4) return '#fbc02d'; // Moderate - Yellow\n    return '#388e3c'; // Low - Green\n  };\n  const getRiskLevelText = score => {\n    if (score >= 0.8) return 'CRITICAL';\n    if (score >= 0.6) return 'HIGH';\n    if (score >= 0.4) return 'MODERATE';\n    return 'LOW';\n  };\n  const handleViewHistory = patientId => {\n    navigate(`/history/${patientId}`);\n  };\n  const handleNewPrediction = () => {\n    navigate('/predict');\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  if (loading && !dashboardData.recentPredictions.length) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '50vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Cardiac Risk Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleNewPrediction,\n        children: \"New Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          elevation: 3,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"System Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Model Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: dashboardData.systemStatus.model_status || \"Online\",\n                  color: \"success\",\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Alert System:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: dashboardData.systemStatus.alert_system || \"Active\",\n                  color: \"success\",\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Last Update:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: dashboardData.systemStatus.last_update ? formatDate(dashboardData.systemStatus.last_update) : \"Today, 10:30 AM\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Total Predictions:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: dashboardData.systemStatus.total_predictions || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Alerts Triggered:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [dashboardData.systemStatus.alerts_triggered || 0, \"(\", dashboardData.systemStatus.alert_percentage ? dashboardData.systemStatus.alert_percentage.toFixed(1) + '%' : '0%', \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Risk Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 200,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: dashboardData.riskDistribution,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"count\",\n                name: \"Patients\",\n                fill: \"#1976d2\",\n                barSize: 40\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Average Risk Trend (Last 7 Days)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: dashboardData.riskTrend,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                domain: [0, 1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                formatter: value => [`${(value * 100).toFixed(1)}%`, 'Average Risk']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"avgRisk\",\n                name: \"Average Risk Score\",\n                stroke: \"#1976d2\",\n                activeDot: {\n                  r: 8\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Recent Predictions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), dashboardData.recentPredictions.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              py: 2,\n              textAlign: 'center'\n            },\n            children: \"No predictions available yet. Make a new prediction to see results here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(List, {\n            children: dashboardData.recentPredictions.map((prediction, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [index > 0 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  onClick: () => handleViewHistory(prediction.id),\n                  children: \"View History\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 25\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      sx: {\n                        mr: 2\n                      },\n                      children: [\"Patient \", prediction.id]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      label: getRiskLevelText(prediction.risk_score),\n                      size: \"small\",\n                      sx: {\n                        backgroundColor: getRiskLevelColor(prediction.risk_score),\n                        color: 'white'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 29\n                    }, this), prediction.alert_triggered && /*#__PURE__*/_jsxDEV(Chip, {\n                      label: \"Alert Sent\",\n                      size: \"small\",\n                      color: \"error\",\n                      sx: {\n                        ml: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 27\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [formatDate(prediction.timestamp), \" | Risk Score: \", (prediction.risk_score * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this)]\n            }, `${prediction.id}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"zUhI+R1mRHI63ohTS4DwfPCUnp4=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Grid","Card","CardContent","Typography","Button","CircularProgress","Paper","useTheme","alpha","Divider","IconButton","Menu","MenuItem","ListItemIcon","ListItemText","Tooltip","Avatar","Stack","LinearProgress","Chip","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","RechartsTooltip","Legend","ResponsiveContainer","PieChart","Pie","Cell","AreaChart","Area","useNavigate","People","PeopleIcon","Warning","WarningIcon","TrendingUp","TrendingUpIcon","AccessTime","AccessTimeIcon","LocalHospital","HospitalIcon","MoreVert","MoreVertIcon","Refresh","RefreshIcon","Timeline","TimelineIcon","Notifications","NotificationsIcon","ArrowForward","ArrowForwardIcon","Schedule","ScheduleIcon","PieChartIcon","BarChartIcon","ShowChart","ShowChartIcon","TimelineOutlined","TimelineOutlinedIcon","Assessment","AssessmentIcon","Error","ErrorIcon","CheckCircle","CheckCircleIcon","FiberManualRecord","FiberManualRecordIcon","format","subDays","parseISO","jsxDEV","_jsxDEV","API_URL","Dashboard","_s","loading","setLoading","error","setError","dashboardData","setDashboardData","recentPredictions","riskDistribution","riskTrend","systemStatus","navigate","fetchDashboardData","response","axios","get","mockData","stats","totalPatients","highRisk","avgResponseTime","trend","totalPredictions","accuracy","avgRiskScore","recentAlerts","id","patientId","name","riskLevel","time","age","weight","avatar","vitalSigns","heartRate","oxygen","bp","temperature","high","medium","low","value","color","weeklyStats","predictions","alerts","riskScore","status","timestamp","riskDistributionData","count","formattedPredictions","map","pred","alertTriggered","risk_score","alert_triggered","data","risk_trend","system_status","err","_err$response","_err$response$data","detail","message","console","getRiskLevelColor","score","getRiskLevelText","handleViewHistory","handleNewPrediction","formatDate","dateString","date","Date","toLocaleString","length","sx","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","py","mb","variant","component","onClick","Alert","severity","my","size","container","spacing","item","xs","md","elevation","gutterBottom","flexDirection","gap","label","model_status","alert_system","last_update","total_predictions","alerts_triggered","alert_percentage","toFixed","p","width","strokeDasharray","dataKey","fill","barSize","domain","formatter","type","stroke","activeDot","r","textAlign","List","prediction","index","Fragment","ListItem","secondaryAction","primary","mr","backgroundColor","ml","secondary","_c","$RefreshReg$"],"sources":["/Users/adilimran/Downloads/Cardiac arrest prediction in New born Babies/cardiac-prediction-frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Grid, \n  Card, \n  CardContent, \n  Typography, \n  Button, \n  CircularProgress,\n  Paper,\n  useTheme,\n  alpha,\n  Divider,\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  Avatar,\n  Stack,\n  LinearProgress,\n  Chip\n} from '@mui/material';\nimport { \n  LineChart, \n  Line, \n  BarChart,\n  Bar,\n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip as RechartsTooltip, \n  Legend, \n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  AreaChart,\n  Area\n} from 'recharts';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  People as PeopleIcon, \n  Warning as WarningIcon, \n  TrendingUp as TrendingUpIcon, \n  AccessTime as AccessTimeIcon,\n  LocalHospital as HospitalIcon,\n  MoreVert as MoreVertIcon,\n  Refresh as RefreshIcon,\n  Timeline as TimelineIcon,\n  Notifications as NotificationsIcon,\n  ArrowForward as ArrowForwardIcon,\n  Schedule as ScheduleIcon,\n  PieChart as PieChartIcon,\n  BarChart as BarChartIcon,\n  ShowChart as ShowChartIcon,\n  TimelineOutlined as TimelineOutlinedIcon,\n  Assessment as AssessmentIcon,\n  Error as ErrorIcon,\n  CheckCircle as CheckCircleIcon,\n  FiberManualRecord as FiberManualRecordIcon\n} from '@mui/icons-material';\nimport { format, subDays, parseISO } from 'date-fns';\n\nconst API_URL = 'http://localhost:8000';\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [dashboardData, setDashboardData] = useState({\n    recentPredictions: [],\n    riskDistribution: [],\n    riskTrend: [],\n    systemStatus: {}\n  });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n\n  const fetchDashboardData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Fetch dashboard stats from API\n      const response = await axios.get(`${API_URL}/dashboard/stats`);\n      \n      // Mock data for the dashboard\n      const mockData = {\n        stats: {\n          totalPatients: 124,\n          highRisk: 8,\n          avgResponseTime: '2.5',\n          trend: 12.5, // percentage\n          totalPredictions: 356,\n          accuracy: 94.2,\n          avgRiskScore: 0.34\n        },\n        recentAlerts: [\n          { \n            id: 1, \n            patientId: 'P1001', \n            name: 'Emma Wilson', \n            riskLevel: 'High', \n            time: '10:23 AM',\n            age: '2 days',\n            weight: '3.2 kg',\n            avatar: '/static/images/avatar/1.jpg',\n            vitalSigns: {\n              heartRate: 185,\n              oxygen: 88,\n              bp: '85/45',\n              temperature: 37.2\n            }\n          },\n          { \n            id: 2, \n            patientId: 'P1002', \n            name: 'Noah Johnson', \n            riskLevel: 'Medium', \n            time: '09:45 AM',\n            age: '1 day',\n            weight: '2.9 kg',\n            avatar: '/static/images/avatar/2.jpg',\n            vitalSigns: {\n              heartRate: 165,\n              oxygen: 92,\n              bp: '90/50',\n              temperature: 36.8\n            }\n          },\n          { \n            id: 3, \n            patientId: 'P1003', \n            name: 'Ava Williams', \n            riskLevel: 'High', \n            time: '09:12 AM',\n            age: '3 days',\n            weight: '3.1 kg',\n            avatar: '/static/images/avatar/3.jpg',\n            vitalSigns: {\n              heartRate: 190,\n              oxygen: 85,\n              bp: '80/40',\n              temperature: 37.5\n            }\n          },\n        ],\n        riskTrend: [\n          { name: 'Jan', high: 5, medium: 12, low: 35 },\n          { name: 'Feb', high: 7, medium: 15, low: 40 },\n          { name: 'Mar', high: 6, medium: 14, low: 38 },\n          { name: 'Apr', high: 8, medium: 16, low: 42 },\n          { name: 'May', high: 10, medium: 18, low: 45 },\n          { name: 'Jun', high: 12, medium: 20, low: 48 },\n        ],\n        riskDistribution: [\n          { name: 'High Risk', value: 8, color: '#f44336' },\n          { name: 'Medium Risk', value: 24, color: '#ff9800' },\n          { name: 'Low Risk', value: 92, color: '#4caf50' },\n        ],\n        weeklyStats: {\n          predictions: 42,\n          alerts: 8,\n          avgRiskScore: 0.34,\n        },\n        recentPredictions: [\n          { id: 1, patientId: 'P1004', name: 'Liam Brown', riskScore: 0.82, status: 'High', timestamp: '2023-06-15T10:30:00' },\n          { id: 2, patientId: 'P1005', name: 'Sophia Davis', riskScore: 0.65, status: 'Medium', timestamp: '2023-06-15T09:45:00' },\n          { id: 3, patientId: 'P1006', name: 'Mia Miller', riskScore: 0.45, status: 'Medium', timestamp: '2023-06-14T16:20:00' },\n        ]\n      };\n      \n      // Format risk distribution for chart\n      const riskDistributionData = [\n        { name: 'Low', count: mockData.riskDistribution[2].value },\n        { name: 'Moderate', count: mockData.riskDistribution[1].value },\n        { name: 'High', count: mockData.riskDistribution[0].value },\n        { name: 'Critical', count: 0 }\n      ];\n      \n      // Format recent predictions\n      const formattedPredictions = mockData.recentPredictions.map(pred => ({\n        id: pred.patientId,\n        timestamp: pred.timestamp,\n        riskScore: pred.riskScore,\n        alertTriggered: pred.status === 'High',\n        risk_score: pred.riskScore,\n        alert_triggered: pred.status === 'High'\n      }));\n      \n      setDashboardData({\n        recentPredictions: formattedPredictions,\n        riskDistribution: riskDistributionData,\n        riskTrend: response.data.risk_trend,\n        systemStatus: response.data.system_status\n      });\n      \n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch dashboard data: ' + (err.response?.data?.detail || err.message));\n      console.error('Error fetching dashboard data:', err);\n      setLoading(false);\n    }\n  };\n\n  const getRiskLevelColor = (score) => {\n    if (score >= 0.8) return '#d32f2f'; // Critical - Red\n    if (score >= 0.6) return '#f57c00'; // High - Orange\n    if (score >= 0.4) return '#fbc02d'; // Moderate - Yellow\n    return '#388e3c'; // Low - Green\n  };\n\n  const getRiskLevelText = (score) => {\n    if (score >= 0.8) return 'CRITICAL';\n    if (score >= 0.6) return 'HIGH';\n    if (score >= 0.4) return 'MODERATE';\n    return 'LOW';\n  };\n\n  const handleViewHistory = (patientId) => {\n    navigate(`/history/${patientId}`);\n  };\n\n  const handleNewPrediction = () => {\n    navigate('/predict');\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  if (loading && !dashboardData.recentPredictions.length) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ py: 4 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Cardiac Risk Dashboard\n        </Typography>\n        <Button \n          variant=\"contained\" \n          color=\"primary\"\n          onClick={handleNewPrediction}\n        >\n          New Prediction\n        </Button>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      {loading && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 2 }}>\n          <CircularProgress size={24} />\n        </Box>\n      )}\n\n      <Grid container spacing={4}>\n        {/* System Status Card */}\n        <Grid item xs={12} md={4}>\n          <Card elevation={3}>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                System Status\n              </Typography>\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Model Status:</Typography>\n                  <Chip \n                    label={dashboardData.systemStatus.model_status || \"Online\"} \n                    color=\"success\" \n                    size=\"small\" \n                  />\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Alert System:</Typography>\n                  <Chip \n                    label={dashboardData.systemStatus.alert_system || \"Active\"} \n                    color=\"success\" \n                    size=\"small\" \n                  />\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Last Update:</Typography>\n                  <Typography variant=\"body2\">\n                    {dashboardData.systemStatus.last_update \n                      ? formatDate(dashboardData.systemStatus.last_update) \n                      : \"Today, 10:30 AM\"}\n                  </Typography>\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Total Predictions:</Typography>\n                  <Typography variant=\"body2\">\n                    {dashboardData.systemStatus.total_predictions || 0}\n                  </Typography>\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Alerts Triggered:</Typography>\n                  <Typography variant=\"body2\">\n                    {dashboardData.systemStatus.alerts_triggered || 0} \n                    ({dashboardData.systemStatus.alert_percentage \n                      ? dashboardData.systemStatus.alert_percentage.toFixed(1) + '%' \n                      : '0%'})\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Risk Distribution Chart */}\n        <Grid item xs={12} md={8}>\n          <Paper elevation={3} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Risk Distribution\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <BarChart data={dashboardData.riskDistribution}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Bar \n                  dataKey=\"count\" \n                  name=\"Patients\" \n                  fill=\"#1976d2\"\n                  barSize={40}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n\n        {/* Risk Trend Chart */}\n        <Grid item xs={12}>\n          <Paper elevation={3} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Average Risk Trend (Last 7 Days)\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <LineChart data={dashboardData.riskTrend}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis domain={[0, 1]} />\n                <Tooltip formatter={(value) => [`${(value * 100).toFixed(1)}%`, 'Average Risk']} />\n                <Legend />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"avgRisk\" \n                  name=\"Average Risk Score\" \n                  stroke=\"#1976d2\" \n                  activeDot={{ r: 8 }} \n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n\n        {/* Recent Predictions */}\n        <Grid item xs={12}>\n          <Paper elevation={3} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Recent Predictions\n            </Typography>\n            {dashboardData.recentPredictions.length === 0 ? (\n              <Typography variant=\"body1\" sx={{ py: 2, textAlign: 'center' }}>\n                No predictions available yet. Make a new prediction to see results here.\n              </Typography>\n            ) : (\n              <List>\n                {dashboardData.recentPredictions.map((prediction, index) => (\n                  <React.Fragment key={`${prediction.id}-${index}`}>\n                    {index > 0 && <Divider />}\n                    <ListItem\n                      secondaryAction={\n                        <Button \n                          variant=\"outlined\" \n                          size=\"small\"\n                          onClick={() => handleViewHistory(prediction.id)}\n                        >\n                          View History\n                        </Button>\n                      }\n                    >\n                      <ListItemText\n                        primary={\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <Typography variant=\"body1\" sx={{ mr: 2 }}>\n                              Patient {prediction.id}\n                            </Typography>\n                            <Chip \n                              label={getRiskLevelText(prediction.risk_score)} \n                              size=\"small\"\n                              sx={{ \n                                backgroundColor: getRiskLevelColor(prediction.risk_score),\n                                color: 'white'\n                              }}\n                            />\n                            {prediction.alert_triggered && (\n                              <Chip \n                                label=\"Alert Sent\" \n                                size=\"small\"\n                                color=\"error\"\n                                sx={{ ml: 1 }}\n                              />\n                            )}\n                          </Box>\n                        }\n                        secondary={\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {formatDate(prediction.timestamp)} | Risk Score: {(prediction.risk_score * 100).toFixed(1)}%\n                          </Typography>\n                        }\n                      />\n                    </ListItem>\n                  </React.Fragment>\n                ))}\n              </List>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}