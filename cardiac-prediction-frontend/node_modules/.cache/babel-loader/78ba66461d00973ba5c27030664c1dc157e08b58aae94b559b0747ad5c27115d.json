{"ast":null,"code":"var _jsxFileName = \"/Users/adilimran/Downloads/Cardiac arrest prediction in New born Babies/cardiac-prediction-frontend/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Grid, Paper, Card, CardContent, List, ListItem, ListItemText, Divider, Chip, CircularProgress, Button, Alert } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar, Legend } from 'recharts';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:8000';\nconst Dashboard = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [dashboardData, setDashboardData] = useState({\n    recentPredictions: [],\n    riskDistribution: [],\n    riskTrend: [],\n    systemStatus: {}\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n  const fetchDashboardData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Fetch dashboard stats from API\n      const response = await axios.get(`${API_URL}/dashboard/stats`);\n\n      // Format risk distribution for chart\n      const riskDistributionData = [{\n        name: 'Low',\n        count: response.data.risk_distribution.low\n      }, {\n        name: 'Moderate',\n        count: response.data.risk_distribution.moderate\n      }, {\n        name: 'High',\n        count: response.data.risk_distribution.high\n      }, {\n        name: 'Critical',\n        count: response.data.risk_distribution.critical\n      }];\n\n      // Format recent predictions\n      const formattedPredictions = response.data.recent_predictions.map(pred => ({\n        id: pred.patient_id,\n        timestamp: pred.timestamp,\n        risk_score: pred.risk_score,\n        alert_triggered: pred.alert_triggered\n      }));\n      setDashboardData({\n        recentPredictions: formattedPredictions,\n        riskDistribution: riskDistributionData,\n        riskTrend: response.data.risk_trend,\n        systemStatus: response.data.system_status\n      });\n      setLoading(false);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Failed to fetch dashboard data: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message));\n      console.error('Error fetching dashboard data:', err);\n      setLoading(false);\n    }\n  };\n  const getRiskLevelColor = score => {\n    if (score >= 0.8) return '#d32f2f'; // Critical - Red\n    if (score >= 0.6) return '#f57c00'; // High - Orange\n    if (score >= 0.4) return '#fbc02d'; // Moderate - Yellow\n    return '#388e3c'; // Low - Green\n  };\n  const getRiskLevelText = score => {\n    if (score >= 0.8) return 'CRITICAL';\n    if (score >= 0.6) return 'HIGH';\n    if (score >= 0.4) return 'MODERATE';\n    return 'LOW';\n  };\n  const handleViewHistory = patientId => {\n    navigate(`/history/${patientId}`);\n  };\n  const handleNewPrediction = () => {\n    navigate('/predict');\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  if (loading && !dashboardData.recentPredictions.length) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '50vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Cardiac Risk Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleNewPrediction,\n        children: \"New Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          elevation: 3,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"System Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Model Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: dashboardData.systemStatus.model_status || \"Online\",\n                  color: \"success\",\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Alert System:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: dashboardData.systemStatus.alert_system || \"Active\",\n                  color: \"success\",\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Last Update:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: dashboardData.systemStatus.last_update ? formatDate(dashboardData.systemStatus.last_update) : \"Today, 10:30 AM\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Total Predictions:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: dashboardData.systemStatus.total_predictions || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Alerts Triggered:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [dashboardData.systemStatus.alerts_triggered || 0, \"(\", dashboardData.systemStatus.alert_percentage ? dashboardData.systemStatus.alert_percentage.toFixed(1) + '%' : '0%', \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Risk Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 200,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: dashboardData.riskDistribution,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"count\",\n                name: \"Patients\",\n                fill: \"#1976d2\",\n                barSize: 40\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Average Risk Trend (Last 7 Days)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 250,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: dashboardData.riskTrend,\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                domain: [0, 1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                formatter: value => [`${(value * 100).toFixed(1)}%`, 'Average Risk']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"avgRisk\",\n                name: \"Average Risk Score\",\n                stroke: \"#1976d2\",\n                activeDot: {\n                  r: 8\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Recent Predictions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), dashboardData.recentPredictions.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              py: 2,\n              textAlign: 'center'\n            },\n            children: \"No predictions available yet. Make a new prediction to see results here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(List, {\n            children: dashboardData.recentPredictions.map((prediction, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [index > 0 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  onClick: () => handleViewHistory(prediction.id),\n                  children: \"View History\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 25\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body1\",\n                      sx: {\n                        mr: 2\n                      },\n                      children: [\"Patient \", prediction.id]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      label: getRiskLevelText(prediction.risk_score),\n                      size: \"small\",\n                      sx: {\n                        backgroundColor: getRiskLevelColor(prediction.risk_score),\n                        color: 'white'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 29\n                    }, this), prediction.alert_triggered && /*#__PURE__*/_jsxDEV(Chip, {\n                      label: \"Alert Sent\",\n                      size: \"small\",\n                      color: \"error\",\n                      sx: {\n                        ml: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 27\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [formatDate(prediction.timestamp), \" | Risk Score: \", (prediction.risk_score * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this)]\n            }, `${prediction.id}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"zUhI+R1mRHI63ohTS4DwfPCUnp4=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Grid","Paper","Card","CardContent","List","ListItem","ListItemText","Divider","Chip","CircularProgress","Button","Alert","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","BarChart","Bar","Legend","useNavigate","axios","jsxDEV","_jsxDEV","API_URL","Dashboard","_s","loading","setLoading","error","setError","dashboardData","setDashboardData","recentPredictions","riskDistribution","riskTrend","systemStatus","navigate","fetchDashboardData","response","get","riskDistributionData","name","count","data","risk_distribution","low","moderate","high","critical","formattedPredictions","recent_predictions","map","pred","id","patient_id","timestamp","risk_score","alert_triggered","risk_trend","system_status","err","_err$response","_err$response$data","detail","message","console","getRiskLevelColor","score","getRiskLevelText","handleViewHistory","patientId","handleNewPrediction","formatDate","dateString","date","Date","toLocaleString","length","sx","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","py","mb","variant","component","color","onClick","severity","my","size","container","spacing","item","xs","md","elevation","gutterBottom","flexDirection","gap","label","model_status","alert_system","last_update","total_predictions","alerts_triggered","alert_percentage","toFixed","p","width","strokeDasharray","dataKey","fill","barSize","domain","formatter","value","type","stroke","activeDot","r","textAlign","prediction","index","Fragment","secondaryAction","primary","mr","backgroundColor","ml","secondary","_c","$RefreshReg$"],"sources":["/Users/adilimran/Downloads/Cardiac arrest prediction in New born Babies/cardiac-prediction-frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Typography, \n  Grid, \n  Paper, \n  Card, \n  CardContent, \n  List, \n  ListItem, \n  ListItemText, \n  Divider,\n  Chip,\n  CircularProgress,\n  Button,\n  Alert\n} from '@mui/material';\nimport { \n  LineChart, \n  Line, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  Legend\n} from 'recharts';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8000';\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [dashboardData, setDashboardData] = useState({\n    recentPredictions: [],\n    riskDistribution: [],\n    riskTrend: [],\n    systemStatus: {}\n  });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n\n  const fetchDashboardData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Fetch dashboard stats from API\n      const response = await axios.get(`${API_URL}/dashboard/stats`);\n      \n      // Format risk distribution for chart\n      const riskDistributionData = [\n        { name: 'Low', count: response.data.risk_distribution.low },\n        { name: 'Moderate', count: response.data.risk_distribution.moderate },\n        { name: 'High', count: response.data.risk_distribution.high },\n        { name: 'Critical', count: response.data.risk_distribution.critical }\n      ];\n      \n      // Format recent predictions\n      const formattedPredictions = response.data.recent_predictions.map(pred => ({\n        id: pred.patient_id,\n        timestamp: pred.timestamp,\n        risk_score: pred.risk_score,\n        alert_triggered: pred.alert_triggered\n      }));\n      \n      setDashboardData({\n        recentPredictions: formattedPredictions,\n        riskDistribution: riskDistributionData,\n        riskTrend: response.data.risk_trend,\n        systemStatus: response.data.system_status\n      });\n      \n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch dashboard data: ' + (err.response?.data?.detail || err.message));\n      console.error('Error fetching dashboard data:', err);\n      setLoading(false);\n    }\n  };\n\n  const getRiskLevelColor = (score) => {\n    if (score >= 0.8) return '#d32f2f'; // Critical - Red\n    if (score >= 0.6) return '#f57c00'; // High - Orange\n    if (score >= 0.4) return '#fbc02d'; // Moderate - Yellow\n    return '#388e3c'; // Low - Green\n  };\n\n  const getRiskLevelText = (score) => {\n    if (score >= 0.8) return 'CRITICAL';\n    if (score >= 0.6) return 'HIGH';\n    if (score >= 0.4) return 'MODERATE';\n    return 'LOW';\n  };\n\n  const handleViewHistory = (patientId) => {\n    navigate(`/history/${patientId}`);\n  };\n\n  const handleNewPrediction = () => {\n    navigate('/predict');\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  if (loading && !dashboardData.recentPredictions.length) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ py: 4 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Cardiac Risk Dashboard\n        </Typography>\n        <Button \n          variant=\"contained\" \n          color=\"primary\"\n          onClick={handleNewPrediction}\n        >\n          New Prediction\n        </Button>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      {loading && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 2 }}>\n          <CircularProgress size={24} />\n        </Box>\n      )}\n\n      <Grid container spacing={4}>\n        {/* System Status Card */}\n        <Grid item xs={12} md={4}>\n          <Card elevation={3}>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                System Status\n              </Typography>\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Model Status:</Typography>\n                  <Chip \n                    label={dashboardData.systemStatus.model_status || \"Online\"} \n                    color=\"success\" \n                    size=\"small\" \n                  />\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Alert System:</Typography>\n                  <Chip \n                    label={dashboardData.systemStatus.alert_system || \"Active\"} \n                    color=\"success\" \n                    size=\"small\" \n                  />\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Last Update:</Typography>\n                  <Typography variant=\"body2\">\n                    {dashboardData.systemStatus.last_update \n                      ? formatDate(dashboardData.systemStatus.last_update) \n                      : \"Today, 10:30 AM\"}\n                  </Typography>\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Total Predictions:</Typography>\n                  <Typography variant=\"body2\">\n                    {dashboardData.systemStatus.total_predictions || 0}\n                  </Typography>\n                </Box>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography variant=\"body2\">Alerts Triggered:</Typography>\n                  <Typography variant=\"body2\">\n                    {dashboardData.systemStatus.alerts_triggered || 0} \n                    ({dashboardData.systemStatus.alert_percentage \n                      ? dashboardData.systemStatus.alert_percentage.toFixed(1) + '%' \n                      : '0%'})\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Risk Distribution Chart */}\n        <Grid item xs={12} md={8}>\n          <Paper elevation={3} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Risk Distribution\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <BarChart data={dashboardData.riskDistribution}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Bar \n                  dataKey=\"count\" \n                  name=\"Patients\" \n                  fill=\"#1976d2\"\n                  barSize={40}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n\n        {/* Risk Trend Chart */}\n        <Grid item xs={12}>\n          <Paper elevation={3} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Average Risk Trend (Last 7 Days)\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <LineChart data={dashboardData.riskTrend}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis domain={[0, 1]} />\n                <Tooltip formatter={(value) => [`${(value * 100).toFixed(1)}%`, 'Average Risk']} />\n                <Legend />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"avgRisk\" \n                  name=\"Average Risk Score\" \n                  stroke=\"#1976d2\" \n                  activeDot={{ r: 8 }} \n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n\n        {/* Recent Predictions */}\n        <Grid item xs={12}>\n          <Paper elevation={3} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Recent Predictions\n            </Typography>\n            {dashboardData.recentPredictions.length === 0 ? (\n              <Typography variant=\"body1\" sx={{ py: 2, textAlign: 'center' }}>\n                No predictions available yet. Make a new prediction to see results here.\n              </Typography>\n            ) : (\n              <List>\n                {dashboardData.recentPredictions.map((prediction, index) => (\n                  <React.Fragment key={`${prediction.id}-${index}`}>\n                    {index > 0 && <Divider />}\n                    <ListItem\n                      secondaryAction={\n                        <Button \n                          variant=\"outlined\" \n                          size=\"small\"\n                          onClick={() => handleViewHistory(prediction.id)}\n                        >\n                          View History\n                        </Button>\n                      }\n                    >\n                      <ListItemText\n                        primary={\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <Typography variant=\"body1\" sx={{ mr: 2 }}>\n                              Patient {prediction.id}\n                            </Typography>\n                            <Chip \n                              label={getRiskLevelText(prediction.risk_score)} \n                              size=\"small\"\n                              sx={{ \n                                backgroundColor: getRiskLevelColor(prediction.risk_score),\n                                color: 'white'\n                              }}\n                            />\n                            {prediction.alert_triggered && (\n                              <Chip \n                                label=\"Alert Sent\" \n                                size=\"small\"\n                                color=\"error\"\n                                sx={{ ml: 1 }}\n                              />\n                            )}\n                          </Box>\n                        }\n                        secondary={\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {formatDate(prediction.timestamp)} | Risk Score: {(prediction.risk_score * 100).toFixed(1)}%\n                          </Typography>\n                        }\n                      />\n                    </ListItem>\n                  </React.Fragment>\n                ))}\n              </List>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,UAAU,EACVC,IAAI,EACJC,KAAK,EACLC,IAAI,EACJC,WAAW,EACXC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,OAAO,EACPC,IAAI,EACJC,gBAAgB,EAChBC,MAAM,EACNC,KAAK,QACA,eAAe;AACtB,SACEC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,mBAAmB,EACnBC,QAAQ,EACRC,GAAG,EACHC,MAAM,QACD,UAAU;AACjB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmC,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqC,aAAa,EAAEC,gBAAgB,CAAC,GAAGtC,QAAQ,CAAC;IACjDuC,iBAAiB,EAAE,EAAE;IACrBC,gBAAgB,EAAE,EAAE;IACpBC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE,CAAC;EACjB,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9BzB,SAAS,CAAC,MAAM;IACd2C,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrCV,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,MAAMS,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,GAAGhB,OAAO,kBAAkB,CAAC;;MAE9D;MACA,MAAMiB,oBAAoB,GAAG,CAC3B;QAAEC,IAAI,EAAE,KAAK;QAAEC,KAAK,EAAEJ,QAAQ,CAACK,IAAI,CAACC,iBAAiB,CAACC;MAAI,CAAC,EAC3D;QAAEJ,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAEJ,QAAQ,CAACK,IAAI,CAACC,iBAAiB,CAACE;MAAS,CAAC,EACrE;QAAEL,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAEJ,QAAQ,CAACK,IAAI,CAACC,iBAAiB,CAACG;MAAK,CAAC,EAC7D;QAAEN,IAAI,EAAE,UAAU;QAAEC,KAAK,EAAEJ,QAAQ,CAACK,IAAI,CAACC,iBAAiB,CAACI;MAAS,CAAC,CACtE;;MAED;MACA,MAAMC,oBAAoB,GAAGX,QAAQ,CAACK,IAAI,CAACO,kBAAkB,CAACC,GAAG,CAACC,IAAI,KAAK;QACzEC,EAAE,EAAED,IAAI,CAACE,UAAU;QACnBC,SAAS,EAAEH,IAAI,CAACG,SAAS;QACzBC,UAAU,EAAEJ,IAAI,CAACI,UAAU;QAC3BC,eAAe,EAAEL,IAAI,CAACK;MACxB,CAAC,CAAC,CAAC;MAEH1B,gBAAgB,CAAC;QACfC,iBAAiB,EAAEiB,oBAAoB;QACvChB,gBAAgB,EAAEO,oBAAoB;QACtCN,SAAS,EAAEI,QAAQ,CAACK,IAAI,CAACe,UAAU;QACnCvB,YAAY,EAAEG,QAAQ,CAACK,IAAI,CAACgB;MAC9B,CAAC,CAAC;MAEFhC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOiC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZjC,QAAQ,CAAC,kCAAkC,IAAI,EAAAgC,aAAA,GAAAD,GAAG,CAACtB,QAAQ,cAAAuB,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAclB,IAAI,cAAAmB,kBAAA,uBAAlBA,kBAAA,CAAoBC,MAAM,KAAIH,GAAG,CAACI,OAAO,CAAC,CAAC;MAC1FC,OAAO,CAACrC,KAAK,CAAC,gCAAgC,EAAEgC,GAAG,CAAC;MACpDjC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMuC,iBAAiB,GAAIC,KAAK,IAAK;IACnC,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO,SAAS,CAAC,CAAC;IACpC,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO,SAAS,CAAC,CAAC;IACpC,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO,SAAS,CAAC,CAAC;IACpC,OAAO,SAAS,CAAC,CAAC;EACpB,CAAC;EAED,MAAMC,gBAAgB,GAAID,KAAK,IAAK;IAClC,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO,UAAU;IACnC,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO,MAAM;IAC/B,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO,UAAU;IACnC,OAAO,KAAK;EACd,CAAC;EAED,MAAME,iBAAiB,GAAIC,SAAS,IAAK;IACvClC,QAAQ,CAAC,YAAYkC,SAAS,EAAE,CAAC;EACnC,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChCnC,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC;EAED,MAAMoC,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,cAAc,CAAC,CAAC;EAC9B,CAAC;EAED,IAAIlD,OAAO,IAAI,CAACI,aAAa,CAACE,iBAAiB,CAAC6C,MAAM,EAAE;IACtD,oBACEvD,OAAA,CAAC3B,GAAG;MAACmF,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAC,QAAA,eAC3F7D,OAAA,CAAChB,gBAAgB;QAAA8E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;EAEA,oBACEjE,OAAA,CAAC3B,GAAG;IAACmF,EAAE,EAAE;MAAEU,EAAE,EAAE;IAAE,CAAE;IAAAL,QAAA,gBACjB7D,OAAA,CAAC3B,GAAG;MAACmF,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE,QAAQ;QAAEQ,EAAE,EAAE;MAAE,CAAE;MAAAN,QAAA,gBACzF7D,OAAA,CAAC1B,UAAU;QAAC8F,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,IAAI;QAAAR,QAAA,EAAC;MAExC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbjE,OAAA,CAACf,MAAM;QACLmF,OAAO,EAAC,WAAW;QACnBE,KAAK,EAAC,SAAS;QACfC,OAAO,EAAEtB,mBAAoB;QAAAY,QAAA,EAC9B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL3D,KAAK,iBACJN,OAAA,CAACd,KAAK;MAACsF,QAAQ,EAAC,OAAO;MAAChB,EAAE,EAAE;QAAEW,EAAE,EAAE;MAAE,CAAE;MAAAN,QAAA,EACnCvD;IAAK;MAAAwD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,EAEA7D,OAAO,iBACNJ,OAAA,CAAC3B,GAAG;MAACmF,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEe,EAAE,EAAE;MAAE,CAAE;MAAAZ,QAAA,eAC5D7D,OAAA,CAAChB,gBAAgB;QAAC0F,IAAI,EAAE;MAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACN,eAEDjE,OAAA,CAACzB,IAAI;MAACoG,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAf,QAAA,gBAEzB7D,OAAA,CAACzB,IAAI;QAACsG,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAlB,QAAA,eACvB7D,OAAA,CAACvB,IAAI;UAACuG,SAAS,EAAE,CAAE;UAAAnB,QAAA,eACjB7D,OAAA,CAACtB,WAAW;YAAAmF,QAAA,gBACV7D,OAAA,CAAC1B,UAAU;cAAC8F,OAAO,EAAC,IAAI;cAACa,YAAY;cAAApB,QAAA,EAAC;YAEtC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbjE,OAAA,CAAC3B,GAAG;cAACmF,EAAE,EAAE;gBAAEC,OAAO,EAAE,MAAM;gBAAEyB,aAAa,EAAE,QAAQ;gBAAEC,GAAG,EAAE;cAAE,CAAE;cAAAtB,QAAA,gBAC5D7D,OAAA,CAAC3B,GAAG;gBAACmF,EAAE,EAAE;kBAAEC,OAAO,EAAE,MAAM;kBAAEC,cAAc,EAAE;gBAAgB,CAAE;gBAAAG,QAAA,gBAC5D7D,OAAA,CAAC1B,UAAU;kBAAC8F,OAAO,EAAC,OAAO;kBAAAP,QAAA,EAAC;gBAAa;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACtDjE,OAAA,CAACjB,IAAI;kBACHqG,KAAK,EAAE5E,aAAa,CAACK,YAAY,CAACwE,YAAY,IAAI,QAAS;kBAC3Df,KAAK,EAAC,SAAS;kBACfI,IAAI,EAAC;gBAAO;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACNjE,OAAA,CAAC3B,GAAG;gBAACmF,EAAE,EAAE;kBAAEC,OAAO,EAAE,MAAM;kBAAEC,cAAc,EAAE;gBAAgB,CAAE;gBAAAG,QAAA,gBAC5D7D,OAAA,CAAC1B,UAAU;kBAAC8F,OAAO,EAAC,OAAO;kBAAAP,QAAA,EAAC;gBAAa;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACtDjE,OAAA,CAACjB,IAAI;kBACHqG,KAAK,EAAE5E,aAAa,CAACK,YAAY,CAACyE,YAAY,IAAI,QAAS;kBAC3DhB,KAAK,EAAC,SAAS;kBACfI,IAAI,EAAC;gBAAO;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACNjE,OAAA,CAAC3B,GAAG;gBAACmF,EAAE,EAAE;kBAAEC,OAAO,EAAE,MAAM;kBAAEC,cAAc,EAAE;gBAAgB,CAAE;gBAAAG,QAAA,gBAC5D7D,OAAA,CAAC1B,UAAU;kBAAC8F,OAAO,EAAC,OAAO;kBAAAP,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACrDjE,OAAA,CAAC1B,UAAU;kBAAC8F,OAAO,EAAC,OAAO;kBAAAP,QAAA,EACxBrD,aAAa,CAACK,YAAY,CAAC0E,WAAW,GACnCrC,UAAU,CAAC1C,aAAa,CAACK,YAAY,CAAC0E,WAAW,CAAC,GAClD;gBAAiB;kBAAAzB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACX,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,eACNjE,OAAA,CAAC3B,GAAG;gBAACmF,EAAE,EAAE;kBAAEC,OAAO,EAAE,MAAM;kBAAEC,cAAc,EAAE;gBAAgB,CAAE;gBAAAG,QAAA,gBAC5D7D,OAAA,CAAC1B,UAAU;kBAAC8F,OAAO,EAAC,OAAO;kBAAAP,QAAA,EAAC;gBAAkB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC3DjE,OAAA,CAAC1B,UAAU;kBAAC8F,OAAO,EAAC,OAAO;kBAAAP,QAAA,EACxBrD,aAAa,CAACK,YAAY,CAAC2E,iBAAiB,IAAI;gBAAC;kBAAA1B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,eACNjE,OAAA,CAAC3B,GAAG;gBAACmF,EAAE,EAAE;kBAAEC,OAAO,EAAE,MAAM;kBAAEC,cAAc,EAAE;gBAAgB,CAAE;gBAAAG,QAAA,gBAC5D7D,OAAA,CAAC1B,UAAU;kBAAC8F,OAAO,EAAC,OAAO;kBAAAP,QAAA,EAAC;gBAAiB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC1DjE,OAAA,CAAC1B,UAAU;kBAAC8F,OAAO,EAAC,OAAO;kBAAAP,QAAA,GACxBrD,aAAa,CAACK,YAAY,CAAC4E,gBAAgB,IAAI,CAAC,EAAC,GACjD,EAACjF,aAAa,CAACK,YAAY,CAAC6E,gBAAgB,GACzClF,aAAa,CAACK,YAAY,CAAC6E,gBAAgB,CAACC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAC5D,IAAI,EAAC,GACX;gBAAA;kBAAA7B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGPjE,OAAA,CAACzB,IAAI;QAACsG,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAlB,QAAA,eACvB7D,OAAA,CAACxB,KAAK;UAACwG,SAAS,EAAE,CAAE;UAACxB,EAAE,EAAE;YAAEoC,CAAC,EAAE;UAAE,CAAE;UAAA/B,QAAA,gBAChC7D,OAAA,CAAC1B,UAAU;YAAC8F,OAAO,EAAC,IAAI;YAACa,YAAY;YAAApB,QAAA,EAAC;UAEtC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbjE,OAAA,CAACP,mBAAmB;YAACoG,KAAK,EAAC,MAAM;YAACjC,MAAM,EAAE,GAAI;YAAAC,QAAA,eAC5C7D,OAAA,CAACN,QAAQ;cAAC2B,IAAI,EAAEb,aAAa,CAACG,gBAAiB;cAAAkD,QAAA,gBAC7C7D,OAAA,CAACT,aAAa;gBAACuG,eAAe,EAAC;cAAK;gBAAAhC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACvCjE,OAAA,CAACX,KAAK;gBAAC0G,OAAO,EAAC;cAAM;gBAAAjC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACxBjE,OAAA,CAACV,KAAK;gBAAAwE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACTjE,OAAA,CAACR,OAAO;gBAAAsE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACXjE,OAAA,CAACL,GAAG;gBACFoG,OAAO,EAAC,OAAO;gBACf5E,IAAI,EAAC,UAAU;gBACf6E,IAAI,EAAC,SAAS;gBACdC,OAAO,EAAE;cAAG;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACb,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGPjE,OAAA,CAACzB,IAAI;QAACsG,IAAI;QAACC,EAAE,EAAE,EAAG;QAAAjB,QAAA,eAChB7D,OAAA,CAACxB,KAAK;UAACwG,SAAS,EAAE,CAAE;UAACxB,EAAE,EAAE;YAAEoC,CAAC,EAAE;UAAE,CAAE;UAAA/B,QAAA,gBAChC7D,OAAA,CAAC1B,UAAU;YAAC8F,OAAO,EAAC,IAAI;YAACa,YAAY;YAAApB,QAAA,EAAC;UAEtC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbjE,OAAA,CAACP,mBAAmB;YAACoG,KAAK,EAAC,MAAM;YAACjC,MAAM,EAAE,GAAI;YAAAC,QAAA,eAC5C7D,OAAA,CAACb,SAAS;cAACkC,IAAI,EAAEb,aAAa,CAACI,SAAU;cAAAiD,QAAA,gBACvC7D,OAAA,CAACT,aAAa;gBAACuG,eAAe,EAAC;cAAK;gBAAAhC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACvCjE,OAAA,CAACX,KAAK;gBAAC0G,OAAO,EAAC;cAAM;gBAAAjC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACxBjE,OAAA,CAACV,KAAK;gBAAC4G,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC;cAAE;gBAAApC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACzBjE,OAAA,CAACR,OAAO;gBAAC2G,SAAS,EAAGC,KAAK,IAAK,CAAC,GAAG,CAACA,KAAK,GAAG,GAAG,EAAET,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,cAAc;cAAE;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACnFjE,OAAA,CAACJ,MAAM;gBAAAkE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACVjE,OAAA,CAACZ,IAAI;gBACHiH,IAAI,EAAC,UAAU;gBACfN,OAAO,EAAC,SAAS;gBACjB5E,IAAI,EAAC,oBAAoB;gBACzBmF,MAAM,EAAC,SAAS;gBAChBC,SAAS,EAAE;kBAAEC,CAAC,EAAE;gBAAE;cAAE;gBAAA1C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGPjE,OAAA,CAACzB,IAAI;QAACsG,IAAI;QAACC,EAAE,EAAE,EAAG;QAAAjB,QAAA,eAChB7D,OAAA,CAACxB,KAAK;UAACwG,SAAS,EAAE,CAAE;UAACxB,EAAE,EAAE;YAAEoC,CAAC,EAAE;UAAE,CAAE;UAAA/B,QAAA,gBAChC7D,OAAA,CAAC1B,UAAU;YAAC8F,OAAO,EAAC,IAAI;YAACa,YAAY;YAAApB,QAAA,EAAC;UAEtC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,EACZzD,aAAa,CAACE,iBAAiB,CAAC6C,MAAM,KAAK,CAAC,gBAC3CvD,OAAA,CAAC1B,UAAU;YAAC8F,OAAO,EAAC,OAAO;YAACZ,EAAE,EAAE;cAAEU,EAAE,EAAE,CAAC;cAAEuC,SAAS,EAAE;YAAS,CAAE;YAAA5C,QAAA,EAAC;UAEhE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,gBAEbjE,OAAA,CAACrB,IAAI;YAAAkF,QAAA,EACFrD,aAAa,CAACE,iBAAiB,CAACmB,GAAG,CAAC,CAAC6E,UAAU,EAAEC,KAAK,kBACrD3G,OAAA,CAAC9B,KAAK,CAAC0I,QAAQ;cAAA/C,QAAA,GACZ8C,KAAK,GAAG,CAAC,iBAAI3G,OAAA,CAAClB,OAAO;gBAAAgF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACzBjE,OAAA,CAACpB,QAAQ;gBACPiI,eAAe,eACb7G,OAAA,CAACf,MAAM;kBACLmF,OAAO,EAAC,UAAU;kBAClBM,IAAI,EAAC,OAAO;kBACZH,OAAO,EAAEA,CAAA,KAAMxB,iBAAiB,CAAC2D,UAAU,CAAC3E,EAAE,CAAE;kBAAA8B,QAAA,EACjD;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CACT;gBAAAJ,QAAA,eAED7D,OAAA,CAACnB,YAAY;kBACXiI,OAAO,eACL9G,OAAA,CAAC3B,GAAG;oBAACmF,EAAE,EAAE;sBAAEC,OAAO,EAAE,MAAM;sBAAEE,UAAU,EAAE;oBAAS,CAAE;oBAAAE,QAAA,gBACjD7D,OAAA,CAAC1B,UAAU;sBAAC8F,OAAO,EAAC,OAAO;sBAACZ,EAAE,EAAE;wBAAEuD,EAAE,EAAE;sBAAE,CAAE;sBAAAlD,QAAA,GAAC,UACjC,EAAC6C,UAAU,CAAC3E,EAAE;oBAAA;sBAAA+B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACZ,CAAC,eACbjE,OAAA,CAACjB,IAAI;sBACHqG,KAAK,EAAEtC,gBAAgB,CAAC4D,UAAU,CAACxE,UAAU,CAAE;sBAC/CwC,IAAI,EAAC,OAAO;sBACZlB,EAAE,EAAE;wBACFwD,eAAe,EAAEpE,iBAAiB,CAAC8D,UAAU,CAACxE,UAAU,CAAC;wBACzDoC,KAAK,EAAE;sBACT;oBAAE;sBAAAR,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,EACDyC,UAAU,CAACvE,eAAe,iBACzBnC,OAAA,CAACjB,IAAI;sBACHqG,KAAK,EAAC,YAAY;sBAClBV,IAAI,EAAC,OAAO;sBACZJ,KAAK,EAAC,OAAO;sBACbd,EAAE,EAAE;wBAAEyD,EAAE,EAAE;sBAAE;oBAAE;sBAAAnD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACf,CACF;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CACN;kBACDiD,SAAS,eACPlH,OAAA,CAAC1B,UAAU;oBAAC8F,OAAO,EAAC,OAAO;oBAACE,KAAK,EAAC,gBAAgB;oBAAAT,QAAA,GAC/CX,UAAU,CAACwD,UAAU,CAACzE,SAAS,CAAC,EAAC,iBAAe,EAAC,CAACyE,UAAU,CAACxE,UAAU,GAAG,GAAG,EAAEyD,OAAO,CAAC,CAAC,CAAC,EAAC,GAC7F;kBAAA;oBAAA7B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY;gBACb;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACM,CAAC;YAAA,GA3CQ,GAAGyC,UAAU,CAAC3E,EAAE,IAAI4E,KAAK,EAAE;cAAA7C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA4ChC,CACjB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC9D,EAAA,CA3RID,SAAS;EAAA,QASIL,WAAW;AAAA;AAAAsH,EAAA,GATxBjH,SAAS;AA6Rf,eAAeA,SAAS;AAAC,IAAAiH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}