{"ast":null,"code":"var _jsxFileName = \"/Users/adilimran/Downloads/Cardiac arrest prediction in New born Babies/cardiac-prediction-frontend/src/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useMemo, useState, useEffect } from 'react';\nimport { ThemeProvider as MUIThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext({});\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [mode, setMode] = useState(() => {\n    // Check for saved user preference, or use system preference\n    const savedMode = localStorage.getItem('themeMode');\n    if (savedMode) return savedMode;\n    return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  });\n\n  // Update the theme when mode changes\n  const theme = useMemo(() => createTheme({\n    palette: {\n      mode,\n      primary: {\n        main: mode === 'light' ? '#1976d2' : '#90caf9'\n      },\n      secondary: {\n        main: mode === 'light' ? '#9c27b0' : '#ce93d8'\n      },\n      background: {\n        default: mode === 'light' ? '#f5f5f5' : '#121212',\n        paper: mode === 'light' ? '#ffffff' : '#1e1e1e'\n      }\n    },\n    typography: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      h1: {\n        fontWeight: 500\n      },\n      h2: {\n        fontWeight: 500\n      },\n      h3: {\n        fontWeight: 500\n      },\n      h4: {\n        fontWeight: 500\n      },\n      h5: {\n        fontWeight: 500\n      },\n      h6: {\n        fontWeight: 500\n      }\n    },\n    components: {\n      MuiButton: {\n        styleOverrides: {\n          root: {\n            textTransform: 'none',\n            borderRadius: 8\n          }\n        }\n      },\n      MuiCard: {\n        styleOverrides: {\n          root: {\n            borderRadius: 12,\n            boxShadow: '0 4px 20px 0 rgba(0,0,0,0.05)'\n          }\n        }\n      }\n    }\n  }), [mode]);\n\n  // Toggle between light and dark mode\n  const toggleDarkMode = () => {\n    setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  };\n\n  // Save user preference\n  useEffect(() => {\n    localStorage.setItem('themeMode', mode);\n    document.documentElement.setAttribute('data-theme', mode);\n  }, [mode]);\n  const value = {\n    darkMode: mode === 'dark',\n    toggleDarkMode\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: /*#__PURE__*/_jsxDEV(MUIThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"PoUCZXrR5rOtiOy2kZBIsry6kYg=\");\n_c = ThemeProvider;\nexport default ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useMemo","useState","useEffect","ThemeProvider","MUIThemeProvider","createTheme","CssBaseline","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","children","_s2","mode","setMode","savedMode","localStorage","getItem","window","matchMedia","matches","theme","palette","primary","main","secondary","background","default","paper","typography","fontFamily","h1","fontWeight","h2","h3","h4","h5","h6","components","MuiButton","styleOverrides","root","textTransform","borderRadius","MuiCard","boxShadow","toggleDarkMode","prevMode","setItem","document","documentElement","setAttribute","value","darkMode","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adilimran/Downloads/Cardiac arrest prediction in New born Babies/cardiac-prediction-frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useMemo, useState, useEffect } from 'react';\nimport { ThemeProvider as MUIThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nexport const ThemeContext = createContext({});\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider = ({ children }) => {\n  const [mode, setMode] = useState(() => {\n    // Check for saved user preference, or use system preference\n    const savedMode = localStorage.getItem('themeMode');\n    if (savedMode) return savedMode;\n    return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  });\n\n  // Update the theme when mode changes\n  const theme = useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n          primary: {\n            main: mode === 'light' ? '#1976d2' : '#90caf9',\n          },\n          secondary: {\n            main: mode === 'light' ? '#9c27b0' : '#ce93d8',\n          },\n          background: {\n            default: mode === 'light' ? '#f5f5f5' : '#121212',\n            paper: mode === 'light' ? '#ffffff' : '#1e1e1e',\n          },\n        },\n        typography: {\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n          h1: { fontWeight: 500 },\n          h2: { fontWeight: 500 },\n          h3: { fontWeight: 500 },\n          h4: { fontWeight: 500 },\n          h5: { fontWeight: 500 },\n          h6: { fontWeight: 500 },\n        },\n        components: {\n          MuiButton: {\n            styleOverrides: {\n              root: {\n                textTransform: 'none',\n                borderRadius: 8,\n              },\n            },\n          },\n          MuiCard: {\n            styleOverrides: {\n              root: {\n                borderRadius: 12,\n                boxShadow: '0 4px 20px 0 rgba(0,0,0,0.05)',\n              },\n            },\n          },\n        },\n      }),\n    [mode]\n  );\n\n  // Toggle between light and dark mode\n  const toggleDarkMode = () => {\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n  };\n\n  // Save user preference\n  useEffect(() => {\n    localStorage.setItem('themeMode', mode);\n    document.documentElement.setAttribute('data-theme', mode);\n  }, [mode]);\n\n  const value = {\n    darkMode: mode === 'dark',\n    toggleDarkMode,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      <MUIThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MUIThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}