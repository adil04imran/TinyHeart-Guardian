{"ast":null,"code":"var _jsxFileName = \"/Users/adilimran/Downloads/Cardiac arrest prediction in New born Babies/cardiac-prediction-frontend/src/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useMemo, useState, useEffect, useCallback } from 'react';\nimport { ThemeProvider as MUIThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext({});\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [mode, setMode] = useState(() => {\n    // Check for saved user preference first, then system preference\n    if (typeof window !== 'undefined') {\n      const savedMode = localStorage.getItem('themeMode');\n      if (savedMode) return savedMode;\n\n      // Check system preference\n      const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      return prefersDark ? 'dark' : 'light';\n    }\n    return 'light'; // Default to light mode for SSR\n  });\n\n  // Toggle between light and dark mode\n  const toggleDarkMode = useCallback(() => {\n    setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  }, []);\n\n  // Create theme with mode\n  const theme = useMemo(() => {\n    const isDark = mode === 'dark';\n    return createTheme({\n      palette: {\n        mode,\n        primary: {\n          main: isDark ? '#90caf9' : '#1976d2',\n          light: isDark ? '#e3f2fd' : '#bbdefb',\n          dark: isDark ? '#42a5f5' : '#1565c0',\n          contrastText: isDark ? 'rgba(0, 0, 0, 0.87)' : '#fff'\n        },\n        secondary: {\n          main: isDark ? '#ce93d8' : '#9c27b0',\n          light: isDark ? '#f3e5f5' : '#e1bee7',\n          dark: isDark ? '#ab47bc' : '#7b1fa2',\n          contrastText: isDark ? 'rgba(0, 0, 0, 0.87)' : '#fff'\n        },\n        background: {\n          default: isDark ? '#121212' : '#f5f5f5',\n          paper: isDark ? '#1e1e1e' : '#ffffff'\n        },\n        text: {\n          primary: isDark ? 'rgba(255, 255, 255, 0.87)' : 'rgba(0, 0, 0, 0.87)',\n          secondary: isDark ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)',\n          disabled: isDark ? 'rgba(255, 255, 255, 0.38)' : 'rgba(0, 0, 0, 0.38)'\n        },\n        divider: isDark ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.12)'\n      },\n      typography: {\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        h1: {\n          fontWeight: 500\n        },\n        h2: {\n          fontWeight: 500\n        },\n        h3: {\n          fontWeight: 500\n        },\n        h4: {\n          fontWeight: 500\n        },\n        h5: {\n          fontWeight: 500\n        },\n        h6: {\n          fontWeight: 500\n        }\n      },\n      components: {\n        MuiButton: {\n          styleOverrides: {\n            root: {\n              textTransform: 'none',\n              borderRadius: 8\n            }\n          }\n        },\n        MuiCard: {\n          styleOverrides: {\n            root: {\n              borderRadius: 12,\n              boxShadow: isDark ? '0 4px 20px 0 rgba(0,0,0,0.2)' : '0 4px 20px 0 rgba(0,0,0,0.05)'\n            }\n          }\n        },\n        MuiAppBar: {\n          styleOverrides: {\n            root: {\n              backgroundColor: isDark ? '#1e1e1e' : '#1976d2',\n              color: isDark ? '#fff' : '#fff',\n              boxShadow: 'none',\n              borderBottom: isDark ? '1px solid rgba(255, 255, 255, 0.12)' : '1px solid rgba(0, 0, 0, 0.12)'\n            }\n          }\n        }\n      }\n    });\n  }, [mode]);\n\n  // Save user preference and update document\n  useEffect(() => {\n    try {\n      localStorage.setItem('themeMode', mode);\n      document.documentElement.setAttribute('data-theme', mode);\n\n      // Update meta theme-color for mobile browsers\n      const metaThemeColor = document.querySelector('meta[name=\"theme-color\"]');\n      if (metaThemeColor) {\n        metaThemeColor.setAttribute('content', mode === 'dark' ? '#121212' : '#1976d2');\n      }\n\n      // Update body class for easier CSS theming\n      document.body.className = mode === 'dark' ? 'dark-theme' : 'light-theme';\n    } catch (error) {\n      console.error('Error setting theme:', error);\n    }\n  }, [mode]);\n\n  // Listen for system theme changes\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = e => {\n      // Only update if there's no saved preference\n      if (!localStorage.getItem('themeMode')) {\n        setMode(e.matches ? 'dark' : 'light');\n      }\n    };\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n  const value = useMemo(() => ({\n    darkMode: mode === 'dark',\n    toggleDarkMode,\n    mode\n  }), [mode, toggleDarkMode]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: /*#__PURE__*/_jsxDEV(MUIThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {\n        enableColorScheme: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"gLe+wlH1SDOGzeH5qKYpHD7VTUo=\");\n_c = ThemeProvider;\nexport default ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useMemo","useState","useEffect","useCallback","ThemeProvider","MUIThemeProvider","createTheme","CssBaseline","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","context","Error","children","_s2","mode","setMode","window","savedMode","localStorage","getItem","prefersDark","matchMedia","matches","toggleDarkMode","prevMode","theme","isDark","palette","primary","main","light","dark","contrastText","secondary","background","default","paper","text","disabled","divider","typography","fontFamily","h1","fontWeight","h2","h3","h4","h5","h6","components","MuiButton","styleOverrides","root","textTransform","borderRadius","MuiCard","boxShadow","MuiAppBar","backgroundColor","color","borderBottom","setItem","document","documentElement","setAttribute","metaThemeColor","querySelector","body","className","error","console","mediaQuery","handleChange","e","addEventListener","removeEventListener","value","darkMode","Provider","enableColorScheme","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adilimran/Downloads/Cardiac arrest prediction in New born Babies/cardiac-prediction-frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useMemo, useState, useEffect, useCallback } from 'react';\nimport { ThemeProvider as MUIThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nexport const ThemeContext = createContext({});\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const [mode, setMode] = useState(() => {\n    // Check for saved user preference first, then system preference\n    if (typeof window !== 'undefined') {\n      const savedMode = localStorage.getItem('themeMode');\n      if (savedMode) return savedMode;\n      \n      // Check system preference\n      const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n      return prefersDark ? 'dark' : 'light';\n    }\n    return 'light'; // Default to light mode for SSR\n  });\n\n  // Toggle between light and dark mode\n  const toggleDarkMode = useCallback(() => {\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n  }, []);\n\n  // Create theme with mode\n  const theme = useMemo(() => {\n    const isDark = mode === 'dark';\n    \n    return createTheme({\n      palette: {\n        mode,\n        primary: {\n          main: isDark ? '#90caf9' : '#1976d2',\n          light: isDark ? '#e3f2fd' : '#bbdefb',\n          dark: isDark ? '#42a5f5' : '#1565c0',\n          contrastText: isDark ? 'rgba(0, 0, 0, 0.87)' : '#fff',\n        },\n        secondary: {\n          main: isDark ? '#ce93d8' : '#9c27b0',\n          light: isDark ? '#f3e5f5' : '#e1bee7',\n          dark: isDark ? '#ab47bc' : '#7b1fa2',\n          contrastText: isDark ? 'rgba(0, 0, 0, 0.87)' : '#fff',\n        },\n        background: {\n          default: isDark ? '#121212' : '#f5f5f5',\n          paper: isDark ? '#1e1e1e' : '#ffffff',\n        },\n        text: {\n          primary: isDark ? 'rgba(255, 255, 255, 0.87)' : 'rgba(0, 0, 0, 0.87)',\n          secondary: isDark ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.6)',\n          disabled: isDark ? 'rgba(255, 255, 255, 0.38)' : 'rgba(0, 0, 0, 0.38)',\n        },\n        divider: isDark ? 'rgba(255, 255, 255, 0.12)' : 'rgba(0, 0, 0, 0.12)',\n      },\n      typography: {\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        h1: { fontWeight: 500 },\n        h2: { fontWeight: 500 },\n        h3: { fontWeight: 500 },\n        h4: { fontWeight: 500 },\n        h5: { fontWeight: 500 },\n        h6: { fontWeight: 500 },\n      },\n      components: {\n        MuiButton: {\n          styleOverrides: {\n            root: {\n              textTransform: 'none',\n              borderRadius: 8,\n            },\n          },\n        },\n        MuiCard: {\n          styleOverrides: {\n            root: {\n              borderRadius: 12,\n              boxShadow: isDark \n                ? '0 4px 20px 0 rgba(0,0,0,0.2)' \n                : '0 4px 20px 0 rgba(0,0,0,0.05)',\n            },\n          },\n        },\n        MuiAppBar: {\n          styleOverrides: {\n            root: {\n              backgroundColor: isDark ? '#1e1e1e' : '#1976d2',\n              color: isDark ? '#fff' : '#fff',\n              boxShadow: 'none',\n              borderBottom: isDark \n                ? '1px solid rgba(255, 255, 255, 0.12)' \n                : '1px solid rgba(0, 0, 0, 0.12)',\n            },\n          },\n        },\n      },\n    });\n  }, [mode]);\n\n  // Save user preference and update document\n  useEffect(() => {\n    try {\n      localStorage.setItem('themeMode', mode);\n      document.documentElement.setAttribute('data-theme', mode);\n      \n      // Update meta theme-color for mobile browsers\n      const metaThemeColor = document.querySelector('meta[name=\"theme-color\"]');\n      if (metaThemeColor) {\n        metaThemeColor.setAttribute('content', mode === 'dark' ? '#121212' : '#1976d2');\n      }\n      \n      // Update body class for easier CSS theming\n      document.body.className = mode === 'dark' ? 'dark-theme' : 'light-theme';\n    } catch (error) {\n      console.error('Error setting theme:', error);\n    }\n  }, [mode]);\n\n  // Listen for system theme changes\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n    \n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = (e) => {\n      // Only update if there's no saved preference\n      if (!localStorage.getItem('themeMode')) {\n        setMode(e.matches ? 'dark' : 'light');\n      }\n    };\n    \n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  const value = useMemo(() => ({\n    darkMode: mode === 'dark',\n    toggleDarkMode,\n    mode,\n  }), [mode, toggleDarkMode]);\n\n  return (\n    <ThemeContext.Provider value={value}>\n      <MUIThemeProvider theme={theme}>\n        <CssBaseline enableColorScheme />\n        {children}\n      </MUIThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeProvider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}